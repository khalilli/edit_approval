{"ast":null,"code":"import _objectSpread from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import CompanyDetailsComponent from\"./CompanyDetailsComponent\";import useStore from'../../../stores/useStore';import shallow from'zustand/shallow';import countries from'../../../assets/countries.json';import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var getState=function getState(state){return[state.companyDetails,state.setCompanyDetails,state.setInitialCompanyDetails,state.initWorkflow,state.getCompanyDetails];};var CompanyDetails=function CompanyDetails(){var _useStore=useStore(getState,shallow),_useStore2=_slicedToArray(_useStore,5),companyDetails=_useStore2[0],setCompanyDetails=_useStore2[1],setInitialCompanyDetails=_useStore2[2],initWorkflow=_useStore2[3],getCompanyDetails=_useStore2[4];useEffect(function(){getCompanyDetails();},[]);var color,colorS,colorSh,colorEmp,colorC=false;if(companyDetails.companyName!==companyDetails.nameWarn){color=true;}if(companyDetails.companySegment!==companyDetails.segmentWarn){colorS=true;}if(companyDetails.companyShare!==companyDetails.shareWarn){colorSh=true;}if(companyDetails.companyNumberOfEmployees!==companyDetails.numberOfEmployeesWarn){colorEmp=true;}if(companyDetails.companyCEO!==companyDetails.CEOWarn){colorC=true;}var args={companyName:companyDetails.name,nameWarn:companyDetails.nameWarn,companySegment:companyDetails.segment,segmentWarn:companyDetails.segmentWarn,companyShare:companyDetails.share,shareWarn:companyDetails.shareWarn,companyNumberOfEmployees:companyDetails.numberOfEmployees,numberOfEmployeesWarn:companyDetails.numberOfEmployeesWarn,companyCEO:companyDetails.ceo,CEOWarn:companyDetails.ceoWarn,countries:countries,companyCountryOfOperation:companyDetails.countryOfOperation,color:color,colorS:colorS,colorSh:colorSh,colorEmp:colorEmp,colorC:colorC,cleanCountryName:function cleanCountryName(){console.log(\"Test\");if(countries.findIndex(function(x){return x.Name===companyDetails.countryOfOperation;})===-1){setCompanyDetails([{property:\"countryOfOperation\",value:''}]);}},setCompanyName:function setCompanyName(name){setCompanyDetails([{property:\"name\",value:name}]);},setCompanySegment:function setCompanySegment(segment){setCompanyDetails([{property:'segment',value:segment}]);},setCompanyShare:function setCompanyShare(share){setCompanyDetails([{property:'share',value:Number.parseInt(share)}]);},setCompanyNumberOfEmployees:function setCompanyNumberOfEmployees(numberOfEmployees){setCompanyDetails([{property:'numberOfEmployees',value:Number.parseInt(numberOfEmployees)}]);},setCompanyCEO:function setCompanyCEO(ceo){setCompanyDetails([{property:'ceo',value:ceo}]);},setCountryOfOperation:function setCountryOfOperation(countryOfOperation){setCompanyDetails([{property:'countryOfOperation',value:countryOfOperation}]);},reset:function reset(){setInitialCompanyDetails();},onSubmitForm:function onSubmitForm(){initWorkflow();}};return/*#__PURE__*/_jsx(CompanyDetailsComponent,_objectSpread({},args));};export default CompanyDetails;","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/companyDetails/views/CompanyDetails.js"],"names":["CompanyDetailsComponent","useStore","shallow","countries","useEffect","getState","state","companyDetails","setCompanyDetails","setInitialCompanyDetails","initWorkflow","getCompanyDetails","CompanyDetails","color","colorS","colorSh","colorEmp","colorC","companyName","nameWarn","companySegment","segmentWarn","companyShare","shareWarn","companyNumberOfEmployees","numberOfEmployeesWarn","companyCEO","CEOWarn","args","name","segment","share","numberOfEmployees","ceo","ceoWarn","companyCountryOfOperation","countryOfOperation","cleanCountryName","console","log","findIndex","x","Name","property","value","setCompanyName","setCompanySegment","setCompanyShare","Number","parseInt","setCompanyNumberOfEmployees","setCompanyCEO","setCountryOfOperation","reset","onSubmitForm"],"mappings":"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","sourcesContent":["import CompanyDetailsComponent from \"./CompanyDetailsComponent\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport countries from '../../../assets/countries.json';\r\nimport { useEffect } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyDetails,\r\n    state.setCompanyDetails,\r\n    state.setInitialCompanyDetails,\r\n    state.initWorkflow,\r\n    state.getCompanyDetails\r\n];\r\n\r\nconst CompanyDetails = () => {\r\n    const [companyDetails, setCompanyDetails, setInitialCompanyDetails, initWorkflow, getCompanyDetails] = useStore(getState, shallow);\r\n    \r\n    useEffect(()=>{\r\n        getCompanyDetails();\r\n    }, []);\r\n\r\n    var color, colorS, colorSh, colorEmp, colorC = false;\r\n    if (companyDetails.companyName !== companyDetails.nameWarn){\r\n        color = true;\r\n    }\r\n    if (companyDetails.companySegment !== companyDetails.segmentWarn){\r\n        colorS = true;\r\n    }\r\n    if (companyDetails.companyShare !== companyDetails.shareWarn){\r\n        colorSh = true;\r\n    }\r\n    if (companyDetails.companyNumberOfEmployees !== companyDetails.numberOfEmployeesWarn){\r\n        colorEmp = true;\r\n    }\r\n    if (companyDetails.companyCEO !== companyDetails.CEOWarn){\r\n        colorC = true;\r\n    }\r\n\r\n    const args = {\r\n        companyName: companyDetails.name,\r\n        nameWarn: companyDetails.nameWarn,\r\n        companySegment: companyDetails.segment,\r\n        segmentWarn: companyDetails.segmentWarn,\r\n        companyShare: companyDetails.share,\r\n        shareWarn: companyDetails.shareWarn,\r\n        companyNumberOfEmployees: companyDetails.numberOfEmployees,\r\n        numberOfEmployeesWarn: companyDetails.numberOfEmployeesWarn,\r\n        companyCEO: companyDetails.ceo,\r\n        CEOWarn: companyDetails.ceoWarn,\r\n        countries,\r\n        companyCountryOfOperation: companyDetails.countryOfOperation,\r\n        color, colorS, colorSh, colorEmp, colorC,\r\n        cleanCountryName: () => {\r\n            console.log(\"Test\");\r\n            if(countries.findIndex(x=>x.Name === companyDetails.countryOfOperation) === -1){\r\n                setCompanyDetails([{property: \"countryOfOperation\", value: ''}]) \r\n            } \r\n        },\r\n        setCompanyName: name => {\r\n            setCompanyDetails([{property: \"name\", value: name}]) \r\n        },\r\n        setCompanySegment: segment => {\r\n            setCompanyDetails([{property: 'segment', value: segment}])\r\n        },\r\n        setCompanyShare: share => {\r\n            setCompanyDetails([{property: 'share', value: Number.parseInt(share)}])\r\n        },\r\n        setCompanyNumberOfEmployees: numberOfEmployees => {\r\n            setCompanyDetails([{property: 'numberOfEmployees', value: Number.parseInt(numberOfEmployees)}])\r\n        },\r\n        setCompanyCEO: ceo => {\r\n            setCompanyDetails([{property: 'ceo', value: ceo}])\r\n        },\r\n        setCountryOfOperation: countryOfOperation => {\r\n            setCompanyDetails([{property: 'countryOfOperation', value: countryOfOperation}])\r\n        },\r\n        reset: () => {\r\n            setInitialCompanyDetails();\r\n        }, \r\n        onSubmitForm: () => {\r\n            initWorkflow();\r\n        }\r\n    }\r\n\r\n    return <CompanyDetailsComponent {...args} />\r\n}\r\n\r\nexport default CompanyDetails;"]},"metadata":{},"sourceType":"module"}