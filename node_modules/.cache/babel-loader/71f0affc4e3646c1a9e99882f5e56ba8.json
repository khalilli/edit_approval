{"ast":null,"code":"import _objectSpread from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import CompanyDetailsComponent from\"./CompanyDetailsComponent\";import useStore from'../../../stores/useStore';import shallow from'zustand/shallow';import countries from'../../../assets/countries.json';import initiateWorkflow from\"../../api/initiateWorkflow\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var getState=function getState(state){return[state.companyDetails,state.setCompanyDetails,state.setInitialCompanyDetails,state.initWorkflow,state.getCompanyDetails];};var CompanyDetails=function CompanyDetails(){var _useStore=useStore(getState,shallow),_useStore2=_slicedToArray(_useStore,5),companyDetails=_useStore2[0],setCompanyDetails=_useStore2[1],setInitialCompanyDetails=_useStore2[2],initWorkflow=_useStore2[3],getCompanyDetails=_useStore2[4];useEffect(function(){getCompanyDetails();},[]);var colorN,colorS,colorSh,colorEmp,colorCeo=false;if(companyDetails.name!==companyDetails.nameWarn){colorN=true;}if(companyDetails.segment!==companyDetails.segmentWarn){colorS=true;}if(companyDetails.share.toString()!==companyDetails.shareWarn){colorSh=true;}if(companyDetails.numberOfEmployees.toString()!==companyDetails.numberOfEmployeesWarn){colorEmp=true;}if(companyDetails.ceo!==companyDetails.ceoWarn){colorCeo=true;}var args={companyName:companyDetails.name,nameWarn:companyDetails.nameWarn,companySegment:companyDetails.segment,segmentWarn:companyDetails.segmentWarn,companyShare:companyDetails.share,shareWarn:companyDetails.shareWarn,companyNumberOfEmployees:companyDetails.numberOfEmployees,numberOfEmployeesWarn:companyDetails.numberOfEmployeesWarn,companyCEO:companyDetails.ceo,CEOWarn:companyDetails.ceoWarn,countries:countries,companyCountryOfOperation:companyDetails.countryOfOperation,colorN:colorN,colorS:colorS,colorSh:colorSh,colorEmp:colorEmp,colorCeo:colorCeo,cleanCountryName:function cleanCountryName(){console.log(\"Test\");if(countries.findIndex(function(x){return x.Name===companyDetails.countryOfOperation;})===-1){setCompanyDetails([{property:\"countryOfOperation\",value:''}]);}},setCompanyName:function setCompanyName(name){setCompanyDetails([{property:\"name\",value:name}]);},setCompanySegment:function setCompanySegment(segment){setCompanyDetails([{property:'segment',value:segment}]);},setCompanyShare:function setCompanyShare(share){setCompanyDetails([{property:'share',value:Number.parseInt(share)}]);},setCompanyNumberOfEmployees:function setCompanyNumberOfEmployees(numberOfEmployees){setCompanyDetails([{property:'numberOfEmployees',value:Number.parseInt(numberOfEmployees)}]);},setCompanyCEO:function setCompanyCEO(ceo){setCompanyDetails([{property:'ceo',value:ceo}]);},setCountryOfOperation:function setCountryOfOperation(countryOfOperation){setCompanyDetails([{property:'countryOfOperation',value:countryOfOperation}]);},reset:function reset(){setInitialCompanyDetails();},onSubmitForm:function onSubmitForm(){var args={cname:companyDetails.name,segment:companyDetails.segment,share:companyDetails.share,numberOfEmployees:companyDetails.numberOfEmployees,ceo:companyDetails.ceo,colorN:colorN,colorS:colorS,colorSh:colorSh,colorEmp:colorEmp,colorCeo:colorCeo};initiateWorkflow(args);}};return/*#__PURE__*/_jsx(CompanyDetailsComponent,_objectSpread({},args));};export default CompanyDetails;","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/companyDetails/views/CompanyDetails.js"],"names":["CompanyDetailsComponent","useStore","shallow","countries","initiateWorkflow","useEffect","getState","state","companyDetails","setCompanyDetails","setInitialCompanyDetails","initWorkflow","getCompanyDetails","CompanyDetails","colorN","colorS","colorSh","colorEmp","colorCeo","name","nameWarn","segment","segmentWarn","share","toString","shareWarn","numberOfEmployees","numberOfEmployeesWarn","ceo","ceoWarn","args","companyName","companySegment","companyShare","companyNumberOfEmployees","companyCEO","CEOWarn","companyCountryOfOperation","countryOfOperation","cleanCountryName","console","log","findIndex","x","Name","property","value","setCompanyName","setCompanySegment","setCompanyShare","Number","parseInt","setCompanyNumberOfEmployees","setCompanyCEO","setCountryOfOperation","reset","onSubmitForm","cname"],"mappings":"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","sourcesContent":["import CompanyDetailsComponent from \"./CompanyDetailsComponent\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport countries from '../../../assets/countries.json';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyDetails,\r\n    state.setCompanyDetails,\r\n    state.setInitialCompanyDetails,\r\n    state.initWorkflow,\r\n    state.getCompanyDetails\r\n];\r\n\r\nconst CompanyDetails = () => {\r\n    const [companyDetails, setCompanyDetails, setInitialCompanyDetails, initWorkflow, getCompanyDetails] = useStore(getState, shallow);\r\n    \r\n    useEffect(()=>{\r\n        getCompanyDetails();\r\n    }, []);\r\n\r\n    var colorN, colorS, colorSh, colorEmp, colorCeo = false;\r\n    if (companyDetails.name !== companyDetails.nameWarn){\r\n        colorN = true;\r\n    }\r\n    if (companyDetails.segment !== companyDetails.segmentWarn){\r\n        colorS = true;\r\n    }\r\n    if (companyDetails.share.toString() !== companyDetails.shareWarn){\r\n        colorSh = true;\r\n    }\r\n    if (companyDetails.numberOfEmployees.toString() !== companyDetails.numberOfEmployeesWarn){\r\n        colorEmp = true;\r\n    }\r\n    if (companyDetails.ceo !== companyDetails.ceoWarn){\r\n        colorCeo = true;\r\n    }\r\n\r\n    const args = {\r\n        companyName: companyDetails.name,\r\n        nameWarn: companyDetails.nameWarn,\r\n        companySegment: companyDetails.segment,\r\n        segmentWarn: companyDetails.segmentWarn,\r\n        companyShare: companyDetails.share,\r\n        shareWarn: companyDetails.shareWarn,\r\n        companyNumberOfEmployees: companyDetails.numberOfEmployees,\r\n        numberOfEmployeesWarn: companyDetails.numberOfEmployeesWarn,\r\n        companyCEO: companyDetails.ceo,\r\n        CEOWarn: companyDetails.ceoWarn,\r\n        countries,\r\n        companyCountryOfOperation: companyDetails.countryOfOperation,\r\n        colorN, colorS, colorSh, colorEmp, colorCeo,\r\n        cleanCountryName: () => {\r\n            console.log(\"Test\");\r\n            if(countries.findIndex(x=>x.Name === companyDetails.countryOfOperation) === -1){\r\n                setCompanyDetails([{property: \"countryOfOperation\", value: ''}]) \r\n            } \r\n        },\r\n        setCompanyName: name => {\r\n            setCompanyDetails([{property: \"name\", value: name}]) \r\n        },\r\n        setCompanySegment: segment => {\r\n            setCompanyDetails([{property: 'segment', value: segment}])\r\n        },\r\n        setCompanyShare: share => {\r\n            setCompanyDetails([{property: 'share', value: Number.parseInt(share)}])\r\n        },\r\n        setCompanyNumberOfEmployees: numberOfEmployees => {\r\n            setCompanyDetails([{property: 'numberOfEmployees', value: Number.parseInt(numberOfEmployees)}])\r\n        },\r\n        setCompanyCEO: ceo => {\r\n            setCompanyDetails([{property: 'ceo', value: ceo}])\r\n        },\r\n        setCountryOfOperation: countryOfOperation => {\r\n            setCompanyDetails([{property: 'countryOfOperation', value: countryOfOperation}])\r\n        },\r\n        reset: () => {\r\n            setInitialCompanyDetails();\r\n        }, \r\n        onSubmitForm: () => {\r\n            const args = {\r\n                cname: companyDetails.name,\r\n                segment: companyDetails.segment,\r\n                share: companyDetails.share,\r\n                numberOfEmployees: companyDetails.numberOfEmployees,\r\n                ceo: companyDetails.ceo,\r\n                colorN, colorS, colorSh, colorEmp, colorCeo\r\n            };\r\n            initiateWorkflow(args);\r\n        }\r\n    }\r\n\r\n    return <CompanyDetailsComponent {...args} />\r\n}\r\n\r\nexport default CompanyDetails;"]},"metadata":{},"sourceType":"module"}