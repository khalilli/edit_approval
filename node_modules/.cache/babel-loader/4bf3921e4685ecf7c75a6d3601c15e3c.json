{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/edit_approval/src/feautures/shareOfCompanies/views/ShareOfCompanies.js\",\n    _s = $RefreshSig$();\n\nimport ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.companyShares, state.companySharesWarn, state.getCompanyShares];\n\nconst ShareOfCompanies = () => {\n  _s();\n\n  const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\n  useEffect(() => {\n    getCompanyShares();\n  }, [getCompanyShares]);\n  const [companyNameShare, setCompanyNameShare] = useState(companyShares);\n  useEffect(() => {\n    setCompanyNameShare(companyShares);\n  }, [companyShares]);\n\n  const changeNameShare = (e, id) => {\n    const values = [...companyNameShare];\n    values[id][e.target.name] = e.target.value;\n    setCompanyNameShare(values);\n  };\n\n  const addShare = () => {\n    setCompanyNameShare([...companyNameShare, {\n      Y: \"\",\n      CNAME: \"\"\n    }]);\n  }; // highlight edited input fields\n\n\n  var colorKeys = [];\n\n  if (companySharesWarn.length < companyNameShare.length) {\n    for (var j = 0; j < companySharesWarn.length; j++) {\n      console.log(companyNameShare[j].Y);\n      console.log(companySharesWarn[j].Y);\n\n      if (companyNameShare[j].Y === companySharesWarn[j].Y) {\n        colorKeys.push(j);\n      }\n    }\n  } else {\n    for (var j = 0; j < companyNameShare.length; j++) {\n      for (var f = 0; f < companySharesWarn.length; f++) {\n        console.log(companyNameShare[j].Y);\n        console.log(companySharesWarn[f].Y);\n\n        if (companyNameShare[j].Y === companySharesWarn[f].Y) {\n          colorKeys.push(j);\n        }\n      }\n    }\n  }\n\n  const args = {\n    companyShares,\n    onSubmitForm: () => {\n      let params = new URLSearchParams(window.location.search);\n      let key = parseInt(params.get(\"key\"));\n      const args = {\n        cid: key,\n        companyName: cname,\n        companyShare: cshare,\n        change: checkChange,\n        nameLength: cname.length\n      };\n      initiateWorkflow(args);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ShareOfCompaniesComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShareOfCompanies, \"NGm4nPDhpUJzH7V0WfmA9q8Y0Wc=\", false, function () {\n  return [useStore];\n});\n\n_c = ShareOfCompanies;\nexport default ShareOfCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareOfCompanies\");","map":{"version":3,"sources":["/home/user/Downloads/edit_approval/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","shallow","initiateWorkflow","useEffect","useState","getState","state","companyShares","companySharesWarn","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","changeNameShare","e","id","values","target","name","value","addShare","Y","CNAME","colorKeys","length","j","console","log","push","f","args","onSubmitForm","params","URLSearchParams","window","location","search","key","parseInt","get","cid","companyName","cname","companyShare","cshare","change","checkChange","nameLength"],"mappings":"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","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.companySharesWarn,\r\n    state.getCompanyShares\r\n];\r\n\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    useEffect(() => {\r\n      setCompanyNameShare(companyShares);\r\n    }, [companyShares]);\r\n  \r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {Y: \"\", CNAME: \"\"}]);\r\n    }\r\n    // highlight edited input fields\r\n    var colorKeys = [];\r\n    if(companySharesWarn.length < companyNameShare.length){\r\n      for (var j=0; j<companySharesWarn.length; j++){\r\n        console.log(companyNameShare[j].Y);\r\n        console.log(companySharesWarn[j].Y);\r\n        if (companyNameShare[j].Y === companySharesWarn[j].Y){\r\n          colorKeys.push(j);\r\n        }\r\n      }\r\n    }else{\r\n      for (var j=0; j<companyNameShare.length; j++){\r\n        for(var f=0;f<companySharesWarn.length; f++){\r\n          console.log(companyNameShare[j].Y);\r\n          console.log(companySharesWarn[f].Y);\r\n          if (companyNameShare[j].Y === companySharesWarn[f].Y){\r\n            colorKeys.push(j);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const args = {\r\n        companyShares,\r\n        onSubmitForm: () => {\r\n          let params = new URLSearchParams(window.location.search);\r\n          let key = parseInt(params.get(\"key\"));\r\n          const args = {\r\n            cid: key,\r\n            companyName: cname,\r\n            companyShare: cshare,\r\n            change: checkChange,\r\n            nameLength: cname.length\r\n          };\r\n          initiateWorkflow(args);\r\n        }\r\n    }\r\n\r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}