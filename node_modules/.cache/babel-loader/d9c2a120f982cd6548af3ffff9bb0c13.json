{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/edit_approval/src/feautures/financialData/views/FinancialData.js\",\n    _s = $RefreshSig$();\n\nimport FinancialDataComponent from \"./FinancialDataComponent\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.financialData, state.setFinancialData, state.setInitialFinancialData, state.getFinancialData];\n\nconst FinancialData = () => {\n  _s();\n\n  const [financialData, setFinancialData, setInitialFinancialData, getFinancialData] = useStore(getState, shallow);\n  useEffect(() => {\n    getFinancialData();\n  }, []);\n  const args = {\n    active: financialData.active,\n    capital: financialData.capital,\n    liability: financialData.liability,\n    ebitda: financialData.ebitda,\n    loss: financialData.loss,\n    incomeTax: financialData.incometax,\n    propertyTax: financialData.propertytax,\n    dividend1: financialData.dividend1,\n    dividend2: financialData.dividend2,\n    setActive: active => {\n      setFinancialData([{\n        property: 'active',\n        value: active\n      }]);\n    },\n    setCapital: capital => {\n      setFinancialData([{\n        property: \"capital\",\n        value: capital\n      }]);\n    },\n    setLiability: liability => {\n      setFinancialData([{\n        property: \"liability\",\n        value: liability\n      }]);\n    },\n    setEBITDA: ebitda => {\n      setFinancialData([{\n        property: \"ebitda\",\n        value: ebitda\n      }]);\n    },\n    setLoss: loss => {\n      setFinancialData([{\n        property: \"loss\",\n        value: loss\n      }]);\n    },\n    setIncomeTax: incometax => {\n      setFinancialData([{\n        property: \"incometax\",\n        value: incometax\n      }]);\n    },\n    setPropertyTax: propertytax => {\n      setFinancialData([{\n        property: \"propertytax\",\n        value: propertytax\n      }]);\n    },\n    setDividend1: dividend1 => {\n      setFinancialData([{\n        property: \"dividend1\",\n        value: dividend1\n      }]);\n    },\n    setDividend2: dividend2 => {\n      setFinancialData([{\n        property: \"dividend2\",\n        value: dividend2\n      }]);\n    },\n    reset: () => {\n      setInitialFinancialData();\n    },\n    onSubmitForm: () => {\n      let params = new URLSearchParams(window.location.search);\n      let key = parseInt(params.get(\"key\"));\n      const args = {\n        cid: key,\n        active: financialData.active,\n        capital: financialData.capital,\n        liability: financialData.liability,\n        ebitda: financialData.ebitda,\n        loss: financialData.loss,\n        incometax: financialData.incometax,\n        propertytax: financialData.propertytax,\n        dividend1: financialData.dividend1,\n        dividend2: financialData.dividend2\n      };\n      initiateWorkflow(args);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FinancialDataComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FinancialData, \"JZIkzSTid7ME2/R2+lTm4yaHBM4=\", false, function () {\n  return [useStore];\n});\n\n_c = FinancialData;\nexport default FinancialData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinancialData\");","map":{"version":3,"sources":["/home/user/Downloads/edit_approval/src/feautures/financialData/views/FinancialData.js"],"names":["FinancialDataComponent","useStore","shallow","initiateWorkflow","useEffect","getState","state","financialData","setFinancialData","setInitialFinancialData","getFinancialData","FinancialData","args","active","capital","liability","ebitda","loss","incomeTax","incometax","propertyTax","propertytax","dividend1","dividend2","setActive","property","value","setCapital","setLiability","setEBITDA","setLoss","setIncomeTax","setPropertyTax","setDividend1","setDividend2","reset","onSubmitForm","params","URLSearchParams","window","location","search","key","parseInt","get","cid"],"mappings":"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","sourcesContent":["import FinancialDataComponent from \"./FinancialDataComponent\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.financialData,\r\n    state.setFinancialData,\r\n    state.setInitialFinancialData,\r\n    state.getFinancialData\r\n];\r\nconst FinancialData = () => {\r\n    const [financialData, setFinancialData, setInitialFinancialData, getFinancialData] = useStore(getState, shallow);\r\n    useEffect(() => {\r\n      getFinancialData();\r\n    }, []);\r\n    const args = {\r\n        active: financialData.active,\r\n        capital: financialData.capital,\r\n        liability: financialData.liability,\r\n        ebitda: financialData.ebitda,\r\n        loss: financialData.loss,\r\n        incomeTax: financialData.incometax,\r\n        propertyTax: financialData.propertytax,\r\n        dividend1: financialData.dividend1,\r\n        dividend2: financialData.dividend2,\r\n        setActive: active => {\r\n            setFinancialData([{property: 'active', value: active}])\r\n        },\r\n        setCapital: capital => {\r\n            setFinancialData([{property: \"capital\", value: capital}])\r\n        },\r\n        setLiability: liability => {\r\n            setFinancialData([{property: \"liability\", value: liability}])\r\n        },\r\n        setEBITDA: ebitda => {\r\n            setFinancialData([{property: \"ebitda\", value: ebitda}])\r\n        },\r\n        setLoss: loss => {\r\n            setFinancialData([{property: \"loss\", value: loss}])\r\n        },\r\n        setIncomeTax: incometax => {\r\n            setFinancialData([{property: \"incometax\", value: incometax}])\r\n        },\r\n        setPropertyTax: propertytax => {\r\n            setFinancialData([{property: \"propertytax\", value: propertytax}])\r\n        },\r\n        setDividend1: dividend1 => {\r\n            setFinancialData([{property: \"dividend1\", value: dividend1}])\r\n        },\r\n        setDividend2: dividend2 => {\r\n            setFinancialData([{property: \"dividend2\", value: dividend2}])\r\n        },\r\n        reset: () => {\r\n            setInitialFinancialData();\r\n        },\r\n        onSubmitForm: () => {\r\n            let params = new URLSearchParams(window.location.search);\r\n            let key = parseInt(params.get(\"key\"));\r\n            const args = {\r\n                cid: key,\r\n                active: financialData.active,\r\n                capital: financialData.capital,\r\n                liability: financialData.liability,\r\n                ebitda: financialData.ebitda,\r\n                loss: financialData.loss,\r\n                incometax: financialData.incometax,\r\n                propertytax: financialData.propertytax,\r\n                dividend1: financialData.dividend1,\r\n                dividend2: financialData.dividend2, \r\n            };\r\n            initiateWorkflow(args);\r\n        }\r\n    }\r\n    return <FinancialDataComponent {...args} />;\r\n}\r\n\r\nexport default FinancialData;"]},"metadata":{},"sourceType":"module"}