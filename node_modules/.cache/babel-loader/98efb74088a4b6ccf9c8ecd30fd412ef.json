{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js\",\n    _s = $RefreshSig$();\n\nimport ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.companyShares, state.companySharesWarn, state.getCompanyShares];\n\nconst ShareOfCompanies = () => {\n  _s();\n\n  const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\n  useEffect(() => {\n    getCompanyShares();\n  }, [getCompanyShares]);\n  const [companyNameShare, setCompanyNameShare] = useState(companyShares);\n  useEffect(() => {\n    setCompanyNameShare(companyShares);\n  }, [companyShares]);\n  console.log(companyNameShare);\n\n  const changeNameShare = (e, id) => {\n    const values = [...companyNameShare];\n    values[id][e.target.name] = e.target.value;\n    setCompanyNameShare(values);\n  };\n\n  const addShare = () => {\n    setCompanyNameShare([...companyNameShare, {\n      Y: \"\",\n      CNAME: \"\"\n    }]);\n  };\n\n  const deleteNameShare = id => {\n    console.log(id);\n    const list = [...companyNameShare];\n    list.splice(id, 1);\n    setCompanyNameShare(list);\n  }; //remove keys of array to fit tags\n\n\n  const cname = [];\n  const cshare = [];\n\n  for (var i = 0; i < companyNameShare.length; i++) {\n    cname.push(companyNameShare[i].CNAME);\n    cshare.push(companyNameShare[i].Y);\n  }\n\n  const args = {\n    companyNameShare,\n    companySharesWarn,\n    changeNameShare,\n    addShare,\n    deleteNameShare,\n    onSubmitForm: () => {\n      const args = {\n        companyName: cname,\n        companyShare: cshare\n      };\n      initiateWorkflow(args);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ShareOfCompaniesComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShareOfCompanies, \"NGm4nPDhpUJzH7V0WfmA9q8Y0Wc=\", false, function () {\n  return [useStore];\n});\n\n_c = ShareOfCompanies;\nexport default ShareOfCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareOfCompanies\");","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","shallow","initiateWorkflow","useEffect","useState","getState","state","companyShares","companySharesWarn","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","console","log","changeNameShare","e","id","values","target","name","value","addShare","Y","CNAME","deleteNameShare","list","splice","cname","cshare","i","length","push","args","onSubmitForm","companyName","companyShare"],"mappings":"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","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.companySharesWarn,\r\n    state.getCompanyShares\r\n];\r\n\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    useEffect(() => {\r\n      setCompanyNameShare(companyShares);\r\n    }, [companyShares]);\r\n  \r\n    console.log(companyNameShare);\r\n  \r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {Y: \"\", CNAME: \"\"}]);\r\n    }\r\n    const deleteNameShare = (id) => {\r\n      console.log(id);\r\n      const list = [...companyNameShare];\r\n      list.splice(id, 1);\r\n      setCompanyNameShare(list);\r\n    }\r\n\r\n    //remove keys of array to fit tags\r\n    const cname = [];\r\n    const cshare = [];\r\n    for (var i=0; i<companyNameShare.length; i++){\r\n        cname.push(companyNameShare[i].CNAME);\r\n        cshare.push(companyNameShare[i].Y);\r\n    }\r\n\r\n    const args = {\r\n        companyNameShare,\r\n        companySharesWarn,\r\n        changeNameShare,\r\n        addShare,\r\n        deleteNameShare,\r\n        onSubmitForm: () => {\r\n            const args = {\r\n                companyName: cname,\r\n                companyShare: cshare,\r\n            };\r\n            initiateWorkflow(args);\r\n        }\r\n    }\r\n\r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}