{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/edit_approval/src/feautures/financialData/views/FinancialData.js\",\n    _s = $RefreshSig$();\n\nimport FinancialDataComponent from \"./FinancialDataComponent\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.financialData, state.setFinancialData, state.setInitialFinancialData, state.getFinancialData];\n\nconst FinancialData = () => {\n  _s();\n\n  const [financialData, setFinancialData, setInitialFinancialData, getFinancialData] = useStore(getState, shallow);\n  useEffect(() => {\n    getFinancialData();\n  }, []);\n  var color,\n      colorC,\n      colorL,\n      colorE,\n      colorLoss,\n      coloriT,\n      colorpT,\n      colorD1,\n      colorD2 = false;\n\n  if (financialData.active !== financialData.activeWarn) {\n    color = true;\n  }\n\n  if (financialData.capital !== financialData.capitalWarn) {\n    colorC = true;\n  }\n\n  if (financialData.liability !== financialData.liabilityWarn) {\n    colorL = true;\n  }\n\n  if (financialData.ebitda !== financialData.ebitdaWarn) {\n    colorE = true;\n  }\n\n  if (financialData.loss !== financialData.lossWarn) {\n    colorLoss = true;\n  }\n\n  if (financialData.incometax !== financialData.incometaxWarn) {\n    coloriT = true;\n  }\n\n  if (financialData.propertytax !== financialData.propertytaxWarn) {\n    colorpT = true;\n  }\n\n  if (financialData.dividend1 !== financialData.dividend1Warn) {\n    colorD1 = true;\n  }\n\n  if (financialData.dividend2 !== financialData.dividend2Warn) {\n    colorD2 = true;\n  }\n\n  const args = {\n    active: financialData.active,\n    activeWarn: financialData.activeWarn,\n    capital: financialData.capital,\n    liability: financialData.liability,\n    ebitda: financialData.ebitda,\n    loss: financialData.loss,\n    incomeTax: financialData.incometax,\n    propertyTax: financialData.propertytax,\n    dividend1: financialData.dividend1,\n    dividend2: financialData.dividend2,\n    setActive: active => {\n      setFinancialData([{\n        property: 'active',\n        value: active\n      }]);\n    },\n    setCapital: capital => {\n      setFinancialData([{\n        property: \"capital\",\n        value: capital\n      }]);\n    },\n    setLiability: liability => {\n      setFinancialData([{\n        property: \"liability\",\n        value: liability\n      }]);\n    },\n    setEBITDA: ebitda => {\n      setFinancialData([{\n        property: \"ebitda\",\n        value: ebitda\n      }]);\n    },\n    setLoss: loss => {\n      setFinancialData([{\n        property: \"loss\",\n        value: loss\n      }]);\n    },\n    setIncomeTax: incometax => {\n      setFinancialData([{\n        property: \"incometax\",\n        value: incometax\n      }]);\n    },\n    setPropertyTax: propertytax => {\n      setFinancialData([{\n        property: \"propertytax\",\n        value: propertytax\n      }]);\n    },\n    setDividend1: dividend1 => {\n      setFinancialData([{\n        property: \"dividend1\",\n        value: dividend1\n      }]);\n    },\n    setDividend2: dividend2 => {\n      setFinancialData([{\n        property: \"dividend2\",\n        value: dividend2\n      }]);\n    },\n    reset: () => {\n      setInitialFinancialData();\n    },\n    onSubmitForm: () => {\n      let params = new URLSearchParams(window.location.search);\n      let key = parseInt(params.get(\"key\"));\n      const args = {\n        cid: key,\n        active: financialData.active,\n        capital: financialData.capital,\n        liability: financialData.liability,\n        ebitda: financialData.ebitda,\n        loss: financialData.loss,\n        incometax: financialData.incometax,\n        propertytax: financialData.propertytax,\n        dividend1: financialData.dividend1,\n        dividend2: financialData.dividend2\n      };\n      initiateWorkflow(args);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FinancialDataComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FinancialData, \"JZIkzSTid7ME2/R2+lTm4yaHBM4=\", false, function () {\n  return [useStore];\n});\n\n_c = FinancialData;\nexport default FinancialData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinancialData\");","map":{"version":3,"sources":["/home/user/Downloads/edit_approval/src/feautures/financialData/views/FinancialData.js"],"names":["FinancialDataComponent","useStore","shallow","initiateWorkflow","useEffect","getState","state","financialData","setFinancialData","setInitialFinancialData","getFinancialData","FinancialData","color","colorC","colorL","colorE","colorLoss","coloriT","colorpT","colorD1","colorD2","active","activeWarn","capital","capitalWarn","liability","liabilityWarn","ebitda","ebitdaWarn","loss","lossWarn","incometax","incometaxWarn","propertytax","propertytaxWarn","dividend1","dividend1Warn","dividend2","dividend2Warn","args","incomeTax","propertyTax","setActive","property","value","setCapital","setLiability","setEBITDA","setLoss","setIncomeTax","setPropertyTax","setDividend1","setDividend2","reset","onSubmitForm","params","URLSearchParams","window","location","search","key","parseInt","get","cid"],"mappings":";;;AAAA,OAAOA,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI,CACtBA,KAAK,CAACC,aADgB,EAEtBD,KAAK,CAACE,gBAFgB,EAGtBF,KAAK,CAACG,uBAHgB,EAItBH,KAAK,CAACI,gBAJgB,CAA1B;;AAMA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACJ,aAAD,EAAgBC,gBAAhB,EAAkCC,uBAAlC,EAA2DC,gBAA3D,IAA+ET,QAAQ,CAACI,QAAD,EAAWH,OAAX,CAA7F;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIE,KAAJ;AAAA,MAAWC,MAAX;AAAA,MAAmBC,MAAnB;AAAA,MAA2BC,MAA3B;AAAA,MAAmCC,SAAnC;AAAA,MAA8CC,OAA9C;AAAA,MAAuDC,OAAvD;AAAA,MAAgEC,OAAhE;AAAA,MAAyEC,OAAO,GAAG,KAAnF;;AACA,MAAGb,aAAa,CAACc,MAAd,KAAyBd,aAAa,CAACe,UAA1C,EAAqD;AACjDV,IAAAA,KAAK,GAAG,IAAR;AACH;;AACD,MAAGL,aAAa,CAACgB,OAAd,KAA0BhB,aAAa,CAACiB,WAA3C,EAAuD;AACnDX,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,MAAGN,aAAa,CAACkB,SAAd,KAA4BlB,aAAa,CAACmB,aAA7C,EAA2D;AACvDZ,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,MAAGP,aAAa,CAACoB,MAAd,KAAyBpB,aAAa,CAACqB,UAA1C,EAAqD;AACjDb,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,MAAGR,aAAa,CAACsB,IAAd,KAAuBtB,aAAa,CAACuB,QAAxC,EAAiD;AAC7Cd,IAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,MAAGT,aAAa,CAACwB,SAAd,KAA4BxB,aAAa,CAACyB,aAA7C,EAA2D;AACvDf,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,MAAGV,aAAa,CAAC0B,WAAd,KAA8B1B,aAAa,CAAC2B,eAA/C,EAA+D;AAC3DhB,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,MAAGX,aAAa,CAAC4B,SAAd,KAA4B5B,aAAa,CAAC6B,aAA7C,EAA2D;AACvDjB,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,MAAGZ,aAAa,CAAC8B,SAAd,KAA4B9B,aAAa,CAAC+B,aAA7C,EAA2D;AACvDlB,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,QAAMmB,IAAI,GAAG;AACTlB,IAAAA,MAAM,EAAEd,aAAa,CAACc,MADb;AAETC,IAAAA,UAAU,EAAEf,aAAa,CAACe,UAFjB;AAGTC,IAAAA,OAAO,EAAEhB,aAAa,CAACgB,OAHd;AAITE,IAAAA,SAAS,EAAElB,aAAa,CAACkB,SAJhB;AAKTE,IAAAA,MAAM,EAAEpB,aAAa,CAACoB,MALb;AAMTE,IAAAA,IAAI,EAAEtB,aAAa,CAACsB,IANX;AAOTW,IAAAA,SAAS,EAAEjC,aAAa,CAACwB,SAPhB;AAQTU,IAAAA,WAAW,EAAElC,aAAa,CAAC0B,WARlB;AASTE,IAAAA,SAAS,EAAE5B,aAAa,CAAC4B,SAThB;AAUTE,IAAAA,SAAS,EAAE9B,aAAa,CAAC8B,SAVhB;AAWTK,IAAAA,SAAS,EAAErB,MAAM,IAAI;AACjBb,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAEvB;AAA5B,OAAD,CAAD,CAAhB;AACH,KAbQ;AAcTwB,IAAAA,UAAU,EAAEtB,OAAO,IAAI;AACnBf,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,SAAX;AAAsBC,QAAAA,KAAK,EAAErB;AAA7B,OAAD,CAAD,CAAhB;AACH,KAhBQ;AAiBTuB,IAAAA,YAAY,EAAErB,SAAS,IAAI;AACvBjB,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,WAAX;AAAwBC,QAAAA,KAAK,EAAEnB;AAA/B,OAAD,CAAD,CAAhB;AACH,KAnBQ;AAoBTsB,IAAAA,SAAS,EAAEpB,MAAM,IAAI;AACjBnB,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAEjB;AAA5B,OAAD,CAAD,CAAhB;AACH,KAtBQ;AAuBTqB,IAAAA,OAAO,EAAEnB,IAAI,IAAI;AACbrB,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAEf;AAA1B,OAAD,CAAD,CAAhB;AACH,KAzBQ;AA0BToB,IAAAA,YAAY,EAAElB,SAAS,IAAI;AACvBvB,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,WAAX;AAAwBC,QAAAA,KAAK,EAAEb;AAA/B,OAAD,CAAD,CAAhB;AACH,KA5BQ;AA6BTmB,IAAAA,cAAc,EAAEjB,WAAW,IAAI;AAC3BzB,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,aAAX;AAA0BC,QAAAA,KAAK,EAAEX;AAAjC,OAAD,CAAD,CAAhB;AACH,KA/BQ;AAgCTkB,IAAAA,YAAY,EAAEhB,SAAS,IAAI;AACvB3B,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,WAAX;AAAwBC,QAAAA,KAAK,EAAET;AAA/B,OAAD,CAAD,CAAhB;AACH,KAlCQ;AAmCTiB,IAAAA,YAAY,EAAEf,SAAS,IAAI;AACvB7B,MAAAA,gBAAgB,CAAC,CAAC;AAACmC,QAAAA,QAAQ,EAAE,WAAX;AAAwBC,QAAAA,KAAK,EAAEP;AAA/B,OAAD,CAAD,CAAhB;AACH,KArCQ;AAsCTgB,IAAAA,KAAK,EAAE,MAAM;AACT5C,MAAAA,uBAAuB;AAC1B,KAxCQ;AAyCT6C,IAAAA,YAAY,EAAE,MAAM;AAChB,UAAIC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAb;AACA,UAAIC,GAAG,GAAGC,QAAQ,CAACN,MAAM,CAACO,GAAP,CAAW,KAAX,CAAD,CAAlB;AACA,YAAMvB,IAAI,GAAG;AACTwB,QAAAA,GAAG,EAAEH,GADI;AAETvC,QAAAA,MAAM,EAAEd,aAAa,CAACc,MAFb;AAGTE,QAAAA,OAAO,EAAEhB,aAAa,CAACgB,OAHd;AAITE,QAAAA,SAAS,EAAElB,aAAa,CAACkB,SAJhB;AAKTE,QAAAA,MAAM,EAAEpB,aAAa,CAACoB,MALb;AAMTE,QAAAA,IAAI,EAAEtB,aAAa,CAACsB,IANX;AAOTE,QAAAA,SAAS,EAAExB,aAAa,CAACwB,SAPhB;AAQTE,QAAAA,WAAW,EAAE1B,aAAa,CAAC0B,WARlB;AASTE,QAAAA,SAAS,EAAE5B,aAAa,CAAC4B,SAThB;AAUTE,QAAAA,SAAS,EAAE9B,aAAa,CAAC8B;AAVhB,OAAb;AAYAlC,MAAAA,gBAAgB,CAACoC,IAAD,CAAhB;AACH;AAzDQ,GAAb;AA2DA,sBAAO,QAAC,sBAAD,OAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA7FD;;GAAM5B,a;UACmFV,Q;;;KADnFU,a;AA+FN,eAAeA,aAAf","sourcesContent":["import FinancialDataComponent from \"./FinancialDataComponent\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.financialData,\r\n    state.setFinancialData,\r\n    state.setInitialFinancialData,\r\n    state.getFinancialData\r\n];\r\nconst FinancialData = () => {\r\n    const [financialData, setFinancialData, setInitialFinancialData, getFinancialData] = useStore(getState, shallow);\r\n    useEffect(() => {\r\n      getFinancialData();\r\n    }, []);\r\n    var color, colorC, colorL, colorE, colorLoss, coloriT, colorpT, colorD1, colorD2 = false;\r\n    if(financialData.active !== financialData.activeWarn){\r\n        color = true;\r\n    }\r\n    if(financialData.capital !== financialData.capitalWarn){\r\n        colorC = true;\r\n    }\r\n    if(financialData.liability !== financialData.liabilityWarn){\r\n        colorL = true;\r\n    }\r\n    if(financialData.ebitda !== financialData.ebitdaWarn){\r\n        colorE = true;\r\n    }\r\n    if(financialData.loss !== financialData.lossWarn){\r\n        colorLoss = true;\r\n    }\r\n    if(financialData.incometax !== financialData.incometaxWarn){\r\n        coloriT = true;\r\n    }\r\n    if(financialData.propertytax !== financialData.propertytaxWarn){\r\n        colorpT = true;\r\n    }\r\n    if(financialData.dividend1 !== financialData.dividend1Warn){\r\n        colorD1 = true;\r\n    }\r\n    if(financialData.dividend2 !== financialData.dividend2Warn){\r\n        colorD2 = true;\r\n    }\r\n    const args = {\r\n        active: financialData.active,\r\n        activeWarn: financialData.activeWarn,\r\n        capital: financialData.capital,\r\n        liability: financialData.liability,\r\n        ebitda: financialData.ebitda,\r\n        loss: financialData.loss,\r\n        incomeTax: financialData.incometax,\r\n        propertyTax: financialData.propertytax,\r\n        dividend1: financialData.dividend1,\r\n        dividend2: financialData.dividend2,\r\n        setActive: active => {\r\n            setFinancialData([{property: 'active', value: active}])\r\n        },\r\n        setCapital: capital => {\r\n            setFinancialData([{property: \"capital\", value: capital}])\r\n        },\r\n        setLiability: liability => {\r\n            setFinancialData([{property: \"liability\", value: liability}])\r\n        },\r\n        setEBITDA: ebitda => {\r\n            setFinancialData([{property: \"ebitda\", value: ebitda}])\r\n        },\r\n        setLoss: loss => {\r\n            setFinancialData([{property: \"loss\", value: loss}])\r\n        },\r\n        setIncomeTax: incometax => {\r\n            setFinancialData([{property: \"incometax\", value: incometax}])\r\n        },\r\n        setPropertyTax: propertytax => {\r\n            setFinancialData([{property: \"propertytax\", value: propertytax}])\r\n        },\r\n        setDividend1: dividend1 => {\r\n            setFinancialData([{property: \"dividend1\", value: dividend1}])\r\n        },\r\n        setDividend2: dividend2 => {\r\n            setFinancialData([{property: \"dividend2\", value: dividend2}])\r\n        },\r\n        reset: () => {\r\n            setInitialFinancialData();\r\n        },\r\n        onSubmitForm: () => {\r\n            let params = new URLSearchParams(window.location.search);\r\n            let key = parseInt(params.get(\"key\"));\r\n            const args = {\r\n                cid: key,\r\n                active: financialData.active,\r\n                capital: financialData.capital,\r\n                liability: financialData.liability,\r\n                ebitda: financialData.ebitda,\r\n                loss: financialData.loss,\r\n                incometax: financialData.incometax,\r\n                propertytax: financialData.propertytax,\r\n                dividend1: financialData.dividend1,\r\n                dividend2: financialData.dividend2, \r\n            };\r\n            initiateWorkflow(args);\r\n        }\r\n    }\r\n    return <FinancialDataComponent {...args} />;\r\n}\r\n\r\nexport default FinancialData;"]},"metadata":{},"sourceType":"module"}