{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js\",\n    _s = $RefreshSig$();\n\nimport ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.companyShares, state.companySharesWarn, state.getCompanyShares];\n\nconst ShareOfCompanies = () => {\n  _s();\n\n  const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\n  useEffect(() => {\n    getCompanyShares();\n  }, [getCompanyShares]);\n  const [companyNameShare, setCompanyNameShare] = useState(companyShares);\n  useEffect(() => {\n    setCompanyNameShare(companyShares);\n  }, [companyShares]);\n\n  const changeNameShare = (e, id) => {\n    const values = [...companyNameShare];\n    values[id][e.target.name] = e.target.value;\n    setCompanyNameShare(values);\n  };\n\n  const addShare = () => {\n    setCompanyNameShare([...companyNameShare, {\n      Y: \"\",\n      CNAME: \"\"\n    }]);\n  }; // highlight edited input fields\n\n\n  var colorKeys = [];\n  var colorValues = [];\n\n  for (var j = 0; j < companyShares.length; j++) {\n    if (companyShares[j].Y !== companySharesWarn[j].Y) {\n      colorKeys.push(j);\n      colorValues.push(companyShares[j].Y);\n    }\n  }\n\n  const deleteNameShare = (e, id) => {\n    e.preventDefault();\n    const list = [...companyNameShare];\n    list.splice(id, 1);\n    setCompanyNameShare(list);\n  }; //remove keys of array to fit tags\n\n\n  const cname = [];\n  const cshare = [];\n\n  for (var i = 0; i < companyNameShare.length; i++) {\n    cname.push(companyNameShare[i].CNAME);\n    cshare.push(parseInt(companyNameShare[i].Y));\n  }\n\n  var checkChange = false;\n\n  if (companySharesWarn.length !== companyNameShare.length) {\n    checkChange = true;\n  } else {\n    for (var n = 0; n < companyNameShare.length; n++) {\n      if (companyNameShare[n].Y !== companySharesWarn[n].Y || companyNameShare[n].CNAME !== companySharesWarn[n].CNAME) {\n        checkChange = true;\n      }\n    }\n  }\n\n  const args = {\n    companyShares,\n    companyNameShare,\n    companySharesWarn,\n    changeNameShare,\n    addShare,\n    deleteNameShare,\n    onSubmitForm: () => {\n      let params = new URLSearchParams(window.location.search);\n      let key = parseInt(params.get(\"key\"));\n      const args = {\n        cid: key,\n        companyName: cname,\n        companyShare: cshare,\n        change: checkChange,\n        nameLength: cname.length\n      };\n      initiateWorkflow(args);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ShareOfCompaniesComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShareOfCompanies, \"NGm4nPDhpUJzH7V0WfmA9q8Y0Wc=\", false, function () {\n  return [useStore];\n});\n\n_c = ShareOfCompanies;\nexport default ShareOfCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareOfCompanies\");","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","shallow","initiateWorkflow","useEffect","useState","getState","state","companyShares","companySharesWarn","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","changeNameShare","e","id","values","target","name","value","addShare","Y","CNAME","colorKeys","colorValues","j","length","push","deleteNameShare","preventDefault","list","splice","cname","cshare","i","parseInt","checkChange","n","args","onSubmitForm","params","URLSearchParams","window","location","search","key","get","cid","companyName","companyShare","change","nameLength"],"mappings":"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","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.companySharesWarn,\r\n    state.getCompanyShares\r\n];\r\n\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    useEffect(() => {\r\n      setCompanyNameShare(companyShares);\r\n    }, [companyShares]);\r\n  \r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {Y: \"\", CNAME: \"\"}]);\r\n    }\r\n    // highlight edited input fields\r\n    var colorKeys = [];\r\n    var colorValues = [];\r\n    for (var j=0; j<companyShares.length; j++){\r\n      if (companyShares[j].Y !== companySharesWarn[j].Y){\r\n        colorKeys.push(j);\r\n        colorValues.push(companyShares[j].Y);\r\n      }\r\n    }\r\n    const deleteNameShare = (e, id) => {\r\n      e.preventDefault();\r\n      const list = [...companyNameShare];\r\n      list.splice(id, 1);\r\n      setCompanyNameShare(list);\r\n    }\r\n\r\n    //remove keys of array to fit tags\r\n    const cname = [];\r\n    const cshare = [];\r\n    for (var i=0; i<companyNameShare.length; i++){\r\n        cname.push(companyNameShare[i].CNAME);\r\n        cshare.push(parseInt(companyNameShare[i].Y));\r\n    }\r\n    \r\n    var checkChange = false;\r\n    if(companySharesWarn.length !== companyNameShare.length){\r\n      checkChange = true;\r\n    }else{\r\n      for(var n=0;n<companyNameShare.length;n++){\r\n        if(companyNameShare[n].Y !== companySharesWarn[n].Y || companyNameShare[n].CNAME !== companySharesWarn[n].CNAME){\r\n          checkChange = true;\r\n        }\r\n      }\r\n    }\r\n    const args = {\r\n        companyShares,\r\n        companyNameShare,\r\n        companySharesWarn,\r\n        changeNameShare,\r\n        addShare,\r\n        deleteNameShare,\r\n        onSubmitForm: () => {\r\n          let params = new URLSearchParams(window.location.search);\r\n          let key = parseInt(params.get(\"key\"));\r\n          const args = {\r\n            cid: key,\r\n            companyName: cname,\r\n            companyShare: cshare,\r\n            change: checkChange,\r\n            nameLength: cname.length\r\n          };\r\n          initiateWorkflow(args);\r\n        }\r\n    }\r\n\r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}