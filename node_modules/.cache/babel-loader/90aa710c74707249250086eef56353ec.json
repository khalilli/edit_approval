{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js\",\n    _s = $RefreshSig$();\n\nimport ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\nimport useStore from '../../../stores/useStore';\nimport { useState } from 'react';\nimport shallow from 'zustand/shallow';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.companyShares, state.getCompanyShares];\n\nconst ShareOfCompanies = () => {\n  _s();\n\n  const [companyShares, getCompanyShares] = useStore(getState, shallow);\n  useEffect(() => {\n    getCompanyShares();\n  }, [getCompanyShares]);\n  const [companyNameShare, setCompanyNameShare] = useState(companyShares);\n\n  const changeNameShare = (e, id) => {\n    const values = [...companyNameShare];\n    values[id][e.target.name] = e.target.value;\n    setCompanyNameShare(values);\n  };\n\n  const addShare = () => {\n    setCompanyNameShare([...companyNameShare, {\n      name: \"\",\n      share: \"\"\n    }]);\n  };\n\n  for (var i = 0; i < companyNameShare.length; i++) {\n    if (companyNameShare[i].name.length === 0) {}\n  }\n\n  const deleteNameShare = id => {\n    const list = [...companyNameShare];\n    list.splice(id, 1);\n    setCompanyNameShare(list);\n  };\n\n  const args = {\n    companyShares\n  };\n  return /*#__PURE__*/_jsxDEV(ShareOfCompaniesComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShareOfCompanies, \"tO9HBg9YDpRHzZDMY38w0nR9zQA=\", false, function () {\n  return [useStore];\n});\n\n_c = ShareOfCompanies;\nexport default ShareOfCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareOfCompanies\");","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","useState","shallow","useEffect","getState","state","companyShares","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","changeNameShare","e","id","values","target","name","value","addShare","share","i","length","deleteNameShare","list","splice","args"],"mappings":";;;AAAA,OAAOA,yBAAP,MAAsC,8BAAtC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI,CACtBA,KAAK,CAACC,aADgB,EAEtBD,KAAK,CAACE,gBAFgB,CAA1B;;AAIA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACF,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAACI,QAAD,EAAWF,OAAX,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAACK,aAAD,CAAxD;;AAEA,QAAMK,eAAe,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACjC,UAAMC,MAAM,GAAG,CAAC,GAAGL,gBAAJ,CAAf;AACAK,IAAAA,MAAM,CAACD,EAAD,CAAN,CAAWD,CAAC,CAACG,MAAF,CAASC,IAApB,IAA4BJ,CAAC,CAACG,MAAF,CAASE,KAArC;AACAP,IAAAA,mBAAmB,CAACI,MAAD,CAAnB;AACD,GAJD;;AAKA,QAAMI,QAAQ,GAAG,MAAM;AACrBR,IAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsB;AAACO,MAAAA,IAAI,EAAE,EAAP;AAAWG,MAAAA,KAAK,EAAE;AAAlB,KAAtB,CAAD,CAAnB;AACD,GAFD;;AAGA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACX,gBAAgB,CAACY,MAAhC,EAAuCD,CAAC,EAAxC,EAA2C;AACzC,QAAGX,gBAAgB,CAACW,CAAD,CAAhB,CAAoBJ,IAApB,CAAyBK,MAAzB,KAAoC,CAAvC,EAAyC,CAExC;AACF;;AACD,QAAMC,eAAe,GAAIT,EAAD,IAAQ;AAC9B,UAAMU,IAAI,GAAG,CAAC,GAAGd,gBAAJ,CAAb;AACAc,IAAAA,IAAI,CAACC,MAAL,CAAYX,EAAZ,EAAgB,CAAhB;AACAH,IAAAA,mBAAmB,CAACa,IAAD,CAAnB;AACD,GAJD;;AAKA,QAAME,IAAI,GAAG;AACTnB,IAAAA;AADS,GAAb;AAKA,sBAAO,QAAC,yBAAD,OAA+BmB;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhCD;;GAAMjB,gB;UACwCR,Q;;;KADxCQ,gB;AAkCN,eAAeA,gBAAf","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport {useState} from 'react';\r\nimport shallow from 'zustand/shallow';\r\nimport { useEffect } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.getCompanyShares\r\n];\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {name: \"\", share: \"\"}]);\r\n    }\r\n    for (var i=0;i<companyNameShare.length;i++){\r\n      if(companyNameShare[i].name.length === 0){\r\n        \r\n      }\r\n    }\r\n    const deleteNameShare = (id) => {\r\n      const list = [...companyNameShare];\r\n      list.splice(id, 1);\r\n      setCompanyNameShare(list);\r\n    }\r\n    const args = {\r\n        companyShares,\r\n        \r\n    }\r\n    \r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}