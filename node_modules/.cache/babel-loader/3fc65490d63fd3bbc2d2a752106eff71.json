{"ast":null,"code":"import axios from 'axios';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\n\nconst handleSetCompany = (set, get, args) => {\n  const companyDetails = Object.assign({}, get().companyDetails);\n\n  for (const object of args) {\n    switch (object.property) {\n      case 'name':\n        companyDetails.name = object.value;\n        break;\n\n      case 'nameWarn':\n        companyDetails.nameWarn = object.value;\n        break;\n\n      case 'segment':\n        companyDetails.segment = object.value;\n        break;\n\n      case 'segmentWarn':\n        companyDetails.segmentWarn = object.value;\n        break;\n\n      case 'share':\n        companyDetails.share = object.value;\n        break;\n\n      case 'shareWarn':\n        companyDetails.shareWarn = object.value;\n        break;\n\n      case 'numberOfEmployees':\n        companyDetails.numberOfEmployees = object.value;\n        break;\n\n      case 'numberOfEmployeesWarn':\n        companyDetails.numberOfEmployeesWarn = object.value;\n        break;\n\n      case 'ceo':\n        companyDetails.ceo = object.value;\n        break;\n\n      case 'ceoWarn':\n        companyDetails.ceoWarn = object.value;\n        break;\n\n      case 'countryOfOperation':\n        companyDetails.countryOfOperation = object.value;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  set({\n    companyDetails\n  });\n};\n\nconst handleInitiateWorkflow = async (set, get) => {\n  const companyDetails = get().companyDetails;\n  const directorList = get().directorList;\n  const representativeList = get().representativeList;\n  const financialData = Object.assign();\n  const args = {\n    cname: companyDetails.name,\n    segment: companyDetails.segment,\n    share: companyDetails.share,\n    numberOfEmployees: companyDetails.numberOfEmployees,\n    ceo: companyDetails.ceo,\n    directorList,\n    representativeList\n  };\n  await initiateWorkflow(args);\n};\n\nconst handleGetCompanyDetails = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      companyDetails: {\n        name: data[0].CNAME,\n        nameWarn: data[0].CNAME,\n        segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        countryOfOperation: ''\n      }\n    });\n  }\n};\n\nconst handleGetDirectors = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      dirname: x.DIREKTOR\n    }));\n    set({\n      directorList: data\n    });\n  }\n};\n\nconst handleGetRepresentatives = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      repname: x.UMUMIYIGINCAQ\n    }));\n    set({\n      representativeList: data\n    });\n  }\n};\n\nconst handleSetFinancialData = (set, get, args) => {\n  const financialData = Object.assign({}, get().financialData);\n\n  for (const object of args) {\n    switch (object.property) {\n      case 'active':\n        financialData.active = object.value;\n        break;\n\n      case 'activeWarn':\n        financialData.activeWarn = object.value;\n        break;\n\n      case 'capital':\n        financialData.capital = object.value;\n        break;\n\n      case 'capitalWarn':\n        financialData.capitalWarn = object.value;\n        break;\n\n      case 'liability':\n        financialData.liability = object.value;\n        break;\n\n      case 'liabilityWarn':\n        financialData.liabilityWarn = object.value;\n        break;\n\n      case 'ebitda':\n        financialData.ebitda = object.value;\n        break;\n\n      case 'ebitdaWarn':\n        financialData.ebitdaWarn = object.value;\n        break;\n\n      case 'loss':\n        financialData.loss = object.value;\n        break;\n\n      case 'lossWarn':\n        financialData.lossWarn = object.value;\n        break;\n\n      case 'incometax':\n        financialData.incometax = object.value;\n        break;\n\n      case 'incometaxWarn':\n        financialData.incometaxWarn = object.value;\n        break;\n\n      case 'propertytax':\n        financialData.propertytax = object.value;\n        break;\n\n      case 'propertytaxWarn':\n        financialData.propertytaxWarn = object.value;\n        break;\n\n      case 'dividend1':\n        financialData.dividend1 = object.value;\n        break;\n\n      case 'dividend1Warn':\n        financialData.dividend1Warn = object.value;\n        break;\n\n      case 'dividend2':\n        financialData.dividend2 = object.value;\n        break;\n\n      case 'dividend2Warn':\n        financialData.dividend2Warn = object.value;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  set({\n    financialData\n  });\n};\n\nconst handleGetFinancialData = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      financialData: {\n        active: data[0].CEMIAKTIVLER,\n        activeWarn: data[0].CEMIAKTIVLER,\n        capital: data[0].CEMIKAPITAL,\n        capitalWarn: data[0].CEMIKAPITAL,\n        liability: data[0].CEMIOHDELIKLER,\n        liabilityWarn: data[0].CEMIOHDELIKLER,\n        ebitda: data[0].EBITDA,\n        ebitdaWarn: data[0].EBITDA,\n        loss: data[0].XALISMENFEET,\n        lossWarn: data[0].XALISMENFEET,\n        incometax: data[0].MENFEETVERGI,\n        incometaxWarn: data[0].MENFEETVERGI,\n        propertytax: data[0].EMLAKVERGI,\n        propertytaxWarn: data[0].EMLAKVERGI,\n        dividend1: data[0].BUTUNTESISCILERE,\n        dividend1Warn: data[0].BUTUNTESISCILERE,\n        dividend2: data[0].SOCARA,\n        dividend2Warn: data[0].SOCARA\n      }\n    });\n  }\n};\n\nconst handleGetCompanyShares = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    console.log(data);\n    set({\n      companyShares: data\n    });\n  }\n};\n\nconst store = (set, get) => ({\n  companyDetails: {\n    name: '',\n    nameWarn: '',\n    segment: '',\n    segmentWarn: '',\n    share: 0,\n    shareWarn: 0,\n    numberOfEmployees: 0,\n    numberOfEmployeesWarn: 0,\n    ceo: '',\n    ceoWarn: '',\n    countryOfOperation: ''\n  },\n  directorList: [],\n  representativeList: [],\n  financialData: {\n    active: '',\n    activeWarn: '',\n    capital: '',\n    capitalWarn: '',\n    liability: '',\n    liabilityWarn: '',\n    ebitda: '',\n    ebitdaWarn: '',\n    loss: '',\n    lossWarn: '',\n    incometax: '',\n    incometaxWarn: '',\n    propertytax: '',\n    propertytaxWarn: '',\n    dividend1: '',\n    dividend1Warn: '',\n    dividend2: '',\n    dividend2Warn: ''\n  },\n  companyShares: [],\n  setCompanyDetails: args => handleSetCompany(set, get, args),\n  setFinancialData: args => handleSetFinancialData(set, get, args),\n  setInitialCompanyDetails: () => set({\n    companyDetails: {\n      name: '',\n      segment: '',\n      share: 0,\n      numberOfEmployees: 0,\n      ceo: '',\n      countryOfOperation: ''\n    }\n  }),\n  setInitialFinancialData: () => set({\n    financialData: {\n      active: '',\n      capital: '',\n      liability: '',\n      ebitda: '',\n      loss: '',\n      incometax: '',\n      propertytax: '',\n      dividend1: '',\n      dividend2: ''\n    }\n  }),\n  initWorkflow: () => handleInitiateWorkflow(set, get),\n  getCompanyDetails: () => handleGetCompanyDetails(set, get),\n  getDirectors: () => handleGetDirectors(set, get),\n  getRepresentatives: () => handleGetRepresentatives(set, get),\n  getFinancialData: () => handleGetFinancialData(set, get),\n  getCompanyShares: () => handleGetCompanyShares(set, get)\n});\n\nconst useStore = create(devtools(store));\nexport default useStore;","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/stores/useStore.js"],"names":["axios","create","devtools","initiateWorkflow","handleSetCompany","set","get","args","companyDetails","Object","assign","object","property","name","value","nameWarn","segment","segmentWarn","share","shareWarn","numberOfEmployees","numberOfEmployeesWarn","ceo","ceoWarn","countryOfOperation","handleInitiateWorkflow","directorList","representativeList","financialData","cname","handleGetCompanyDetails","params","URLSearchParams","window","location","search","key","parseInt","Number","isNaN","response","data","pop","CNAME","SERVICENAME","CSHARE","COUNTEMP","NNAME","handleGetDirectors","map","x","dirname","DIREKTOR","handleGetRepresentatives","repname","UMUMIYIGINCAQ","handleSetFinancialData","active","activeWarn","capital","capitalWarn","liability","liabilityWarn","ebitda","ebitdaWarn","loss","lossWarn","incometax","incometaxWarn","propertytax","propertytaxWarn","dividend1","dividend1Warn","dividend2","dividend2Warn","handleGetFinancialData","CEMIAKTIVLER","CEMIKAPITAL","CEMIOHDELIKLER","EBITDA","XALISMENFEET","MENFEETVERGI","EMLAKVERGI","BUTUNTESISCILERE","SOCARA","handleGetCompanyShares","console","log","companyShares","store","setCompanyDetails","setFinancialData","setInitialCompanyDetails","setInitialFinancialData","initWorkflow","getCompanyDetails","getDirectors","getRepresentatives","getFinancialData","getCompanyShares","useStore"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport create from 'zustand';\r\nimport {devtools} from 'zustand/middleware';\r\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\r\n\r\nconst handleSetCompany = (set, get, args) => {\r\n    const companyDetails = Object.assign({}, get().companyDetails);\r\n    for (const object of args) {  \r\n        switch (object.property) {\r\n            case 'name':\r\n                companyDetails.name = object.value;\r\n                break;\r\n            case 'nameWarn':\r\n                companyDetails.nameWarn = object.value;\r\n                break;\r\n            case 'segment':\r\n                companyDetails.segment = object.value; \r\n                break;\r\n            case 'segmentWarn':\r\n                companyDetails.segmentWarn = object.value; \r\n                break;\r\n            case 'share':\r\n                companyDetails.share = object.value;\r\n                break;\r\n            case 'shareWarn':\r\n                companyDetails.shareWarn = object.value;\r\n                break;\r\n            case 'numberOfEmployees':\r\n                companyDetails.numberOfEmployees = object.value;\r\n                break;\r\n            case 'numberOfEmployeesWarn':\r\n                companyDetails.numberOfEmployeesWarn = object.value;\r\n                break;\r\n            case 'ceo':\r\n                companyDetails.ceo = object.value;\r\n                break;\r\n            case 'ceoWarn':\r\n                companyDetails.ceoWarn = object.value;\r\n                break;\r\n            case 'countryOfOperation':\r\n                companyDetails.countryOfOperation = object.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    set({companyDetails});\r\n}\r\nconst handleInitiateWorkflow = async (set, get) => {\r\n    const companyDetails = get().companyDetails;\r\n    const directorList = get().directorList;\r\n    const representativeList = get().representativeList;\r\n    const financialData = Object.assign()\r\n    const args = {\r\n        cname: companyDetails.name,\r\n        segment: companyDetails.segment,\r\n        share: companyDetails.share,\r\n        numberOfEmployees: companyDetails.numberOfEmployees,\r\n        ceo: companyDetails.ceo,\r\n        directorList,\r\n        representativeList,\r\n    };\r\n    await initiateWorkflow(args);\r\n}\r\nconst handleGetCompanyDetails = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            companyDetails: {\r\n                name: data[0].CNAME,\r\n                nameWarn: data[0].CNAME,\r\n                segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                countryOfOperation: ''\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetDirectors = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({dirname: x.DIREKTOR}));\r\n        set({\r\n            directorList: data,\r\n        })\r\n    }\r\n}\r\nconst handleGetRepresentatives = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({repname: x.UMUMIYIGINCAQ}));\r\n        set({\r\n            representativeList: data,\r\n        })\r\n    }\r\n}\r\nconst handleSetFinancialData = (set, get, args) => {\r\n    const financialData = Object.assign({}, get().financialData);\r\n    for (const object of args) {  \r\n        switch (object.property) {\r\n            case 'active':\r\n                financialData.active = object.value;\r\n                break;\r\n            case 'activeWarn':\r\n                financialData.activeWarn = object.value;\r\n                break;\r\n            case 'capital':\r\n                financialData.capital = object.value;\r\n                break;\r\n            case 'capitalWarn':\r\n                financialData.capitalWarn = object.value;\r\n                break;\r\n            case 'liability':\r\n                financialData.liability = object.value;\r\n                break;\r\n            case 'liabilityWarn':\r\n                financialData.liabilityWarn = object.value;\r\n                break;\r\n            case 'ebitda':\r\n                financialData.ebitda = object.value;\r\n                break;\r\n            case 'ebitdaWarn':\r\n                financialData.ebitdaWarn = object.value;\r\n                break;\r\n            case 'loss':\r\n                financialData.loss = object.value;\r\n                break; \r\n            case 'lossWarn':\r\n                financialData.lossWarn = object.value;\r\n                break; \r\n            case 'incometax':\r\n                financialData.incometax = object.value;\r\n                break;\r\n            case 'incometaxWarn':\r\n                financialData.incometaxWarn = object.value;\r\n                break;\r\n            case 'propertytax':\r\n                financialData.propertytax = object.value;\r\n                break; \r\n            case 'propertytaxWarn':\r\n                financialData.propertytaxWarn = object.value;\r\n                break;   \r\n            case 'dividend1':\r\n                financialData.dividend1 = object.value;\r\n                break;\r\n            case 'dividend1Warn':\r\n                financialData.dividend1Warn = object.value;\r\n                break;\r\n            case 'dividend2':\r\n                financialData.dividend2 = object.value;\r\n                break;   \r\n            case 'dividend2Warn':\r\n                financialData.dividend2Warn = object.value;\r\n                break;     \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    set({financialData});\r\n}\r\nconst handleGetFinancialData = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            financialData: {\r\n                active: data[0].CEMIAKTIVLER,\r\n                activeWarn: data[0].CEMIAKTIVLER,\r\n                capital: data[0].CEMIKAPITAL,\r\n                capitalWarn: data[0].CEMIKAPITAL,\r\n                liability: data[0].CEMIOHDELIKLER,\r\n                liabilityWarn: data[0].CEMIOHDELIKLER,\r\n                ebitda: data[0].EBITDA,\r\n                ebitdaWarn: data[0].EBITDA,\r\n                loss: data[0].XALISMENFEET,\r\n                lossWarn: data[0].XALISMENFEET,\r\n                incometax: data[0].MENFEETVERGI,\r\n                incometaxWarn: data[0].MENFEETVERGI,\r\n                propertytax: data[0].EMLAKVERGI,\r\n                propertytaxWarn: data[0].EMLAKVERGI,\r\n                dividend1: data[0].BUTUNTESISCILERE,\r\n                dividend1Warn: data[0].BUTUNTESISCILERE,\r\n                dividend2: data[0].SOCARA,\r\n                dividend2Warn: data[0].SOCARA,\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetCompanyShares = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\")); \r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        console.log(data);\r\n        set({\r\n            companyShares: data,\r\n        })\r\n    }\r\n}\r\n\r\nconst store = (set, get) => ({\r\n    companyDetails: {\r\n        name: '',\r\n        nameWarn: '',\r\n        segment: '',\r\n        segmentWarn: '',\r\n        share: 0,\r\n        shareWarn: 0,\r\n        numberOfEmployees: 0,\r\n        numberOfEmployeesWarn: 0,\r\n        ceo: '',\r\n        ceoWarn: '',\r\n        countryOfOperation: ''\r\n    },\r\n    directorList: [],\r\n    representativeList: [],\r\n    financialData: {\r\n        active: '',\r\n        activeWarn: '',\r\n        capital: '',\r\n        capitalWarn: '',\r\n        liability: '',\r\n        liabilityWarn: '',\r\n        ebitda: '',\r\n        ebitdaWarn: '',\r\n        loss: '',\r\n        lossWarn: '',\r\n        incometax: '',\r\n        incometaxWarn: '',\r\n        propertytax: '',\r\n        propertytaxWarn: '',\r\n        dividend1: '',\r\n        dividend1Warn: '',\r\n        dividend2: '',\r\n        dividend2Warn: '',\r\n    },\r\n    companyShares: [],\r\n    setCompanyDetails:  args => handleSetCompany(set, get, args),\r\n    setFinancialData: args => handleSetFinancialData(set, get, args),\r\n    setInitialCompanyDetails: () => set({companyDetails: {\r\n        name: '',\r\n        segment: '',\r\n        share: 0,\r\n        numberOfEmployees: 0,\r\n        ceo: '',\r\n        countryOfOperation: ''\r\n    }}),\r\n    setInitialFinancialData: () => set({financialData: {\r\n        active: '',\r\n        capital: '',\r\n        liability: '',\r\n        ebitda: '',\r\n        loss: '',\r\n        incometax: '',\r\n        propertytax: '',\r\n        dividend1: '',\r\n        dividend2: ''\r\n    }}),\r\n    initWorkflow: () => handleInitiateWorkflow(set, get),\r\n    getCompanyDetails: () => handleGetCompanyDetails(set, get),\r\n    getDirectors: () => handleGetDirectors(set, get),\r\n    getRepresentatives: () => handleGetRepresentatives(set, get),\r\n    getFinancialData: () => handleGetFinancialData(set, get),\r\n    getCompanyShares: () => handleGetCompanyShares(set, get)\r\n})\r\n\r\n\r\nconst useStore = create(devtools(store));\r\n\r\nexport default useStore;"]},"metadata":{},"sourceType":"module"}