{"ast":null,"code":"import axios from 'axios';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\nconst companyDetails = get().companyDetails;\nconsole.log(companyDetails.name);\nconst directorList = get().directorList;\n\nconst handleSetCompany = (set, get, args) => {\n  const companyDetails = Object.assign({}, get().companyDetails);\n\n  for (const object of args) {\n    switch (object.property) {\n      case 'name':\n        companyDetails.name = object.value;\n        break;\n\n      case 'nameWarn':\n        companyDetails.nameWarn = object.value;\n        break;\n\n      case 'segment':\n        companyDetails.segment = object.value;\n        break;\n\n      case 'segmentWarn':\n        companyDetails.segmentWarn = object.value;\n        break;\n\n      case 'share':\n        companyDetails.share = object.value;\n        break;\n\n      case 'shareWarn':\n        companyDetails.shareWarn = object.value;\n        break;\n\n      case 'numberOfEmployees':\n        companyDetails.numberOfEmployees = object.value;\n        break;\n\n      case 'numberOfEmployeesWarn':\n        companyDetails.numberOfEmployeesWarn = object.value;\n        break;\n\n      case 'ceo':\n        companyDetails.ceo = object.value;\n        break;\n\n      case 'ceoWarn':\n        companyDetails.ceoWarn = object.value;\n        break;\n\n      case 'countryOfOperation':\n        companyDetails.countryOfOperation = object.value;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  set({\n    companyDetails\n  });\n};\n\nconst handleInitiateWorkflow = async (set, get) => {\n  const companyDetails = get().companyDetails;\n  const directorList = get().directorList;\n  const representativeList = get().representativeList;\n  const financialData = get().financialData;\n  const args = {\n    cname: companyDetails.name,\n    segment: companyDetails.segment,\n    share: companyDetails.share,\n    numberOfEmployees: companyDetails.numberOfEmployees,\n    ceo: companyDetails.ceo,\n    directorList,\n    representativeList,\n    active: financialData.active,\n    capital: financialData.capital,\n    liability: financialData.liability,\n    ebitda: financialData.ebitda,\n    loss: financialData.loss,\n    incometax: financialData.incometax,\n    propertytax: financialData.propertytax,\n    dividend1: financialData.dividend1,\n    dividend2: financialData.dividend2\n  };\n  await initiateWorkflow(args);\n};\n\nconst handleGetCompanyDetails = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      companyDetails: {\n        name: data[0].CNAME,\n        nameWarn: data[0].CNAME,\n        segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        countryOfOperation: ''\n      }\n    });\n  }\n};\n\nconst handleGetDirectors = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      dirname: x.DIREKTOR\n    }));\n    set({\n      directorList: data\n    });\n  }\n};\n\nconst handleGetRepresentatives = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      repname: x.UMUMIYIGINCAQ\n    }));\n    set({\n      representativeList: data\n    });\n  }\n};\n\nconst handleSetFinancialData = (set, get, args) => {\n  const financialData = Object.assign({}, get().financialData);\n\n  for (const object of args) {\n    switch (object.property) {\n      case 'active':\n        financialData.active = object.value;\n        break;\n\n      case 'activeWarn':\n        financialData.activeWarn = object.value;\n        break;\n\n      case 'capital':\n        financialData.capital = object.value;\n        break;\n\n      case 'capitalWarn':\n        financialData.capitalWarn = object.value;\n        break;\n\n      case 'liability':\n        financialData.liability = object.value;\n        break;\n\n      case 'liabilityWarn':\n        financialData.liabilityWarn = object.value;\n        break;\n\n      case 'ebitda':\n        financialData.ebitda = object.value;\n        break;\n\n      case 'ebitdaWarn':\n        financialData.ebitdaWarn = object.value;\n        break;\n\n      case 'loss':\n        financialData.loss = object.value;\n        break;\n\n      case 'lossWarn':\n        financialData.lossWarn = object.value;\n        break;\n\n      case 'incometax':\n        financialData.incometax = object.value;\n        break;\n\n      case 'incometaxWarn':\n        financialData.incometaxWarn = object.value;\n        break;\n\n      case 'propertytax':\n        financialData.propertytax = object.value;\n        break;\n\n      case 'propertytaxWarn':\n        financialData.propertytaxWarn = object.value;\n        break;\n\n      case 'dividend1':\n        financialData.dividend1 = object.value;\n        break;\n\n      case 'dividend1Warn':\n        financialData.dividend1Warn = object.value;\n        break;\n\n      case 'dividend2':\n        financialData.dividend2 = object.value;\n        break;\n\n      case 'dividend2Warn':\n        financialData.dividend2Warn = object.value;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  set({\n    financialData\n  });\n};\n\nconst handleGetFinancialData = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      financialData: {\n        active: data[0].CEMIAKTIVLER,\n        activeWarn: data[0].CEMIAKTIVLER,\n        capital: data[0].CEMIKAPITAL,\n        capitalWarn: data[0].CEMIKAPITAL,\n        liability: data[0].CEMIOHDELIKLER,\n        liabilityWarn: data[0].CEMIOHDELIKLER,\n        ebitda: data[0].EBITDA,\n        ebitdaWarn: data[0].EBITDA,\n        loss: data[0].XALISMENFEET,\n        lossWarn: data[0].XALISMENFEET,\n        incometax: data[0].MENFEETVERGI,\n        incometaxWarn: data[0].MENFEETVERGI,\n        propertytax: data[0].EMLAKVERGI,\n        propertytaxWarn: data[0].EMLAKVERGI,\n        dividend1: data[0].BUTUNTESISCILERE,\n        dividend1Warn: data[0].BUTUNTESISCILERE,\n        dividend2: data[0].SOCARA,\n        dividend2Warn: data[0].SOCARA\n      }\n    });\n  }\n};\n\nconst handleGetCompanyShares = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    console.log(data);\n    set({\n      companyShares: data\n    });\n  }\n};\n\nconst store = (set, get) => ({\n  companyDetails: {\n    name: '',\n    nameWarn: '',\n    segment: '',\n    segmentWarn: '',\n    share: 0,\n    shareWarn: 0,\n    numberOfEmployees: 0,\n    numberOfEmployeesWarn: 0,\n    ceo: '',\n    ceoWarn: '',\n    countryOfOperation: ''\n  },\n  directorList: [],\n  representativeList: [],\n  financialData: {\n    active: '',\n    activeWarn: '',\n    capital: '',\n    capitalWarn: '',\n    liability: '',\n    liabilityWarn: '',\n    ebitda: '',\n    ebitdaWarn: '',\n    loss: '',\n    lossWarn: '',\n    incometax: '',\n    incometaxWarn: '',\n    propertytax: '',\n    propertytaxWarn: '',\n    dividend1: '',\n    dividend1Warn: '',\n    dividend2: '',\n    dividend2Warn: ''\n  },\n  companyShares: [],\n  setCompanyDetails: args => handleSetCompany(set, get, args),\n  setFinancialData: args => handleSetFinancialData(set, get, args),\n  setInitialCompanyDetails: () => set({\n    companyDetails: {\n      name: '',\n      segment: '',\n      share: 0,\n      numberOfEmployees: 0,\n      ceo: '',\n      countryOfOperation: ''\n    }\n  }),\n  setInitialFinancialData: () => set({\n    financialData: {\n      active: '',\n      capital: '',\n      liability: '',\n      ebitda: '',\n      loss: '',\n      incometax: '',\n      propertytax: '',\n      dividend1: '',\n      dividend2: ''\n    }\n  }),\n  initWorkflow: () => handleInitiateWorkflow(set, get),\n  getCompanyDetails: () => handleGetCompanyDetails(set, get),\n  getDirectors: () => handleGetDirectors(set, get),\n  getRepresentatives: () => handleGetRepresentatives(set, get),\n  getFinancialData: () => handleGetFinancialData(set, get),\n  getCompanyShares: () => handleGetCompanyShares(set, get)\n});\n\nconst useStore = create(devtools(store));\nexport default useStore;","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/stores/useStore.js"],"names":["axios","create","devtools","initiateWorkflow","companyDetails","get","console","log","name","directorList","handleSetCompany","set","args","Object","assign","object","property","value","nameWarn","segment","segmentWarn","share","shareWarn","numberOfEmployees","numberOfEmployeesWarn","ceo","ceoWarn","countryOfOperation","handleInitiateWorkflow","representativeList","financialData","cname","active","capital","liability","ebitda","loss","incometax","propertytax","dividend1","dividend2","handleGetCompanyDetails","params","URLSearchParams","window","location","search","key","parseInt","Number","isNaN","response","data","pop","CNAME","SERVICENAME","CSHARE","COUNTEMP","NNAME","handleGetDirectors","map","x","dirname","DIREKTOR","handleGetRepresentatives","repname","UMUMIYIGINCAQ","handleSetFinancialData","activeWarn","capitalWarn","liabilityWarn","ebitdaWarn","lossWarn","incometaxWarn","propertytaxWarn","dividend1Warn","dividend2Warn","handleGetFinancialData","CEMIAKTIVLER","CEMIKAPITAL","CEMIOHDELIKLER","EBITDA","XALISMENFEET","MENFEETVERGI","EMLAKVERGI","BUTUNTESISCILERE","SOCARA","handleGetCompanyShares","companyShares","store","setCompanyDetails","setFinancialData","setInitialCompanyDetails","setInitialFinancialData","initWorkflow","getCompanyDetails","getDirectors","getRepresentatives","getFinancialData","getCompanyShares","useStore"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport create from 'zustand';\r\nimport {devtools} from 'zustand/middleware';\r\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\r\nconst companyDetails = get().companyDetails;\r\nconsole.log(companyDetails.name);\r\nconst directorList = get().directorList;\r\n\r\nconst handleSetCompany = (set, get, args) => {\r\n    const companyDetails = Object.assign({}, get().companyDetails);\r\n    for (const object of args) {  \r\n        switch (object.property) {\r\n            case 'name':\r\n                companyDetails.name = object.value;\r\n                break;\r\n            case 'nameWarn':\r\n                companyDetails.nameWarn = object.value;\r\n                break;\r\n            case 'segment':\r\n                companyDetails.segment = object.value; \r\n                break;\r\n            case 'segmentWarn':\r\n                companyDetails.segmentWarn = object.value; \r\n                break;\r\n            case 'share':\r\n                companyDetails.share = object.value;\r\n                break;\r\n            case 'shareWarn':\r\n                companyDetails.shareWarn = object.value;\r\n                break;\r\n            case 'numberOfEmployees':\r\n                companyDetails.numberOfEmployees = object.value;\r\n                break;\r\n            case 'numberOfEmployeesWarn':\r\n                companyDetails.numberOfEmployeesWarn = object.value;\r\n                break;\r\n            case 'ceo':\r\n                companyDetails.ceo = object.value;\r\n                break;\r\n            case 'ceoWarn':\r\n                companyDetails.ceoWarn = object.value;\r\n                break;\r\n            case 'countryOfOperation':\r\n                companyDetails.countryOfOperation = object.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    set({companyDetails});\r\n}\r\nconst handleInitiateWorkflow = async (set, get) => {\r\n    const companyDetails = get().companyDetails;\r\n    const directorList = get().directorList;\r\n    const representativeList = get().representativeList;\r\n    const financialData = get().financialData;\r\n    const args = {\r\n        cname: companyDetails.name,\r\n        segment: companyDetails.segment,\r\n        share: companyDetails.share,\r\n        numberOfEmployees: companyDetails.numberOfEmployees,\r\n        ceo: companyDetails.ceo,\r\n        directorList,\r\n        representativeList,\r\n        active: financialData.active,\r\n        capital: financialData.capital,\r\n        liability: financialData.liability,\r\n        ebitda: financialData.ebitda,\r\n        loss: financialData.loss,\r\n        incometax: financialData.incometax,\r\n        propertytax: financialData.propertytax,\r\n        dividend1: financialData.dividend1,\r\n        dividend2: financialData.dividend2,\r\n    };\r\n    await initiateWorkflow(args);\r\n}\r\nconst handleGetCompanyDetails = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            companyDetails: {\r\n                name: data[0].CNAME,\r\n                nameWarn: data[0].CNAME,\r\n                segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                countryOfOperation: ''\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetDirectors = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({dirname: x.DIREKTOR}));\r\n        set({\r\n            directorList: data,\r\n        })\r\n    }\r\n}\r\nconst handleGetRepresentatives = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({repname: x.UMUMIYIGINCAQ}));\r\n        set({\r\n            representativeList: data,\r\n        })\r\n    }\r\n}\r\nconst handleSetFinancialData = (set, get, args) => {\r\n    const financialData = Object.assign({}, get().financialData);\r\n    for (const object of args) {  \r\n        switch (object.property) {\r\n            case 'active':\r\n                financialData.active = object.value;\r\n                break;\r\n            case 'activeWarn':\r\n                financialData.activeWarn = object.value;\r\n                break;\r\n            case 'capital':\r\n                financialData.capital = object.value;\r\n                break;\r\n            case 'capitalWarn':\r\n                financialData.capitalWarn = object.value;\r\n                break;\r\n            case 'liability':\r\n                financialData.liability = object.value;\r\n                break;\r\n            case 'liabilityWarn':\r\n                financialData.liabilityWarn = object.value;\r\n                break;\r\n            case 'ebitda':\r\n                financialData.ebitda = object.value;\r\n                break;\r\n            case 'ebitdaWarn':\r\n                financialData.ebitdaWarn = object.value;\r\n                break;\r\n            case 'loss':\r\n                financialData.loss = object.value;\r\n                break; \r\n            case 'lossWarn':\r\n                financialData.lossWarn = object.value;\r\n                break; \r\n            case 'incometax':\r\n                financialData.incometax = object.value;\r\n                break;\r\n            case 'incometaxWarn':\r\n                financialData.incometaxWarn = object.value;\r\n                break;\r\n            case 'propertytax':\r\n                financialData.propertytax = object.value;\r\n                break; \r\n            case 'propertytaxWarn':\r\n                financialData.propertytaxWarn = object.value;\r\n                break;   \r\n            case 'dividend1':\r\n                financialData.dividend1 = object.value;\r\n                break;\r\n            case 'dividend1Warn':\r\n                financialData.dividend1Warn = object.value;\r\n                break;\r\n            case 'dividend2':\r\n                financialData.dividend2 = object.value;\r\n                break;   \r\n            case 'dividend2Warn':\r\n                financialData.dividend2Warn = object.value;\r\n                break;     \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    set({financialData});\r\n}\r\nconst handleGetFinancialData = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            financialData: {\r\n                active: data[0].CEMIAKTIVLER,\r\n                activeWarn: data[0].CEMIAKTIVLER,\r\n                capital: data[0].CEMIKAPITAL,\r\n                capitalWarn: data[0].CEMIKAPITAL,\r\n                liability: data[0].CEMIOHDELIKLER,\r\n                liabilityWarn: data[0].CEMIOHDELIKLER,\r\n                ebitda: data[0].EBITDA,\r\n                ebitdaWarn: data[0].EBITDA,\r\n                loss: data[0].XALISMENFEET,\r\n                lossWarn: data[0].XALISMENFEET,\r\n                incometax: data[0].MENFEETVERGI,\r\n                incometaxWarn: data[0].MENFEETVERGI,\r\n                propertytax: data[0].EMLAKVERGI,\r\n                propertytaxWarn: data[0].EMLAKVERGI,\r\n                dividend1: data[0].BUTUNTESISCILERE,\r\n                dividend1Warn: data[0].BUTUNTESISCILERE,\r\n                dividend2: data[0].SOCARA,\r\n                dividend2Warn: data[0].SOCARA,\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetCompanyShares = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\")); \r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        console.log(data);\r\n        set({\r\n            companyShares: data,\r\n        })\r\n    }\r\n}\r\n\r\nconst store = (set, get) => ({\r\n    companyDetails: {\r\n        name: '',\r\n        nameWarn: '',\r\n        segment: '',\r\n        segmentWarn: '',\r\n        share: 0,\r\n        shareWarn: 0,\r\n        numberOfEmployees: 0,\r\n        numberOfEmployeesWarn: 0,\r\n        ceo: '',\r\n        ceoWarn: '',\r\n        countryOfOperation: ''\r\n    },\r\n    directorList: [],\r\n    representativeList: [],\r\n    financialData: {\r\n        active: '',\r\n        activeWarn: '',\r\n        capital: '',\r\n        capitalWarn: '',\r\n        liability: '',\r\n        liabilityWarn: '',\r\n        ebitda: '',\r\n        ebitdaWarn: '',\r\n        loss: '',\r\n        lossWarn: '',\r\n        incometax: '',\r\n        incometaxWarn: '',\r\n        propertytax: '',\r\n        propertytaxWarn: '',\r\n        dividend1: '',\r\n        dividend1Warn: '',\r\n        dividend2: '',\r\n        dividend2Warn: '',\r\n    },\r\n    companyShares: [],\r\n    setCompanyDetails:  args => handleSetCompany(set, get, args),\r\n    setFinancialData: args => handleSetFinancialData(set, get, args),\r\n    setInitialCompanyDetails: () => set({companyDetails: {\r\n        name: '',\r\n        segment: '',\r\n        share: 0,\r\n        numberOfEmployees: 0,\r\n        ceo: '',\r\n        countryOfOperation: ''\r\n    }}),\r\n    setInitialFinancialData: () => set({financialData: {\r\n        active: '',\r\n        capital: '',\r\n        liability: '',\r\n        ebitda: '',\r\n        loss: '',\r\n        incometax: '',\r\n        propertytax: '',\r\n        dividend1: '',\r\n        dividend2: ''\r\n    }}),\r\n    initWorkflow: () => handleInitiateWorkflow(set, get),\r\n    getCompanyDetails: () => handleGetCompanyDetails(set, get),\r\n    getDirectors: () => handleGetDirectors(set, get),\r\n    getRepresentatives: () => handleGetRepresentatives(set, get),\r\n    getFinancialData: () => handleGetFinancialData(set, get),\r\n    getCompanyShares: () => handleGetCompanyShares(set, get)\r\n})\r\n\r\n\r\nconst useStore = create(devtools(store));\r\n\r\nexport default useStore;"]},"metadata":{},"sourceType":"module"}