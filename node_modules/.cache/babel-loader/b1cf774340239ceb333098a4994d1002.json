{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js\",\n    _s = $RefreshSig$();\n\nimport ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\nimport useStore from '../../../stores/useStore';\nimport shallow from 'zustand/shallow';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = state => [state.companyShares, state.getCompanyShares];\n\nconst ShareOfCompanies = () => {\n  _s();\n\n  const [companyShares, getCompanyShares] = useStore(getState, shallow);\n  useEffect(() => {\n    getCompanyShares();\n  }, [getCompanyShares]);\n  const [companyNameShare, setCompanyNameShare] = useState(companyShares);\n  useEffect(() => {\n    setCompanyNameShare(companyShares);\n  }, [props.companyShares]);\n  console.log(companyNameShare);\n\n  const changeNameShare = (e, id) => {\n    const values = [...companyNameShare];\n    values[id][e.target.name] = e.target.value;\n    setCompanyNameShare(values);\n  };\n\n  const addShare = () => {\n    setCompanyNameShare([...companyNameShare, {\n      Y: \"\",\n      CNAME: \"\"\n    }]);\n  };\n\n  const deleteNameShare = id => {\n    console.log(id);\n    const list = [...companyNameShare];\n    list.splice(id, 1);\n    setCompanyNameShare(list);\n  };\n\n  const args = {\n    companyShares\n  };\n  return /*#__PURE__*/_jsxDEV(ShareOfCompaniesComponent, { ...args\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShareOfCompanies, \"PHKbrabfwE4O7HeljXD2rB2fUOA=\", false, function () {\n  return [useStore];\n});\n\n_c = ShareOfCompanies;\nexport default ShareOfCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareOfCompanies\");","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","shallow","useEffect","useState","getState","state","companyShares","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","props","console","log","changeNameShare","e","id","values","target","name","value","addShare","Y","CNAME","deleteNameShare","list","splice","args"],"mappings":";;;AAAA,OAAOA,yBAAP,MAAsC,8BAAtC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI,CACtBA,KAAK,CAACC,aADgB,EAEtBD,KAAK,CAACE,gBAFgB,CAA1B;;AAKA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACF,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAACI,QAAD,EAAWH,OAAX,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAACG,aAAD,CAAxD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,mBAAmB,CAACJ,aAAD,CAAnB;AACD,GAFQ,EAEN,CAACK,KAAK,CAACL,aAAP,CAFM,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;;AAEA,QAAMK,eAAe,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACjC,UAAMC,MAAM,GAAG,CAAC,GAAGR,gBAAJ,CAAf;AACAQ,IAAAA,MAAM,CAACD,EAAD,CAAN,CAAWD,CAAC,CAACG,MAAF,CAASC,IAApB,IAA4BJ,CAAC,CAACG,MAAF,CAASE,KAArC;AACAV,IAAAA,mBAAmB,CAACO,MAAD,CAAnB;AACD,GAJD;;AAKA,QAAMI,QAAQ,GAAG,MAAM;AACrBX,IAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsB;AAACa,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,KAAK,EAAE;AAAf,KAAtB,CAAD,CAAnB;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAIR,EAAD,IAAQ;AAC9BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACA,UAAMS,IAAI,GAAG,CAAC,GAAGhB,gBAAJ,CAAb;AACAgB,IAAAA,IAAI,CAACC,MAAL,CAAYV,EAAZ,EAAgB,CAAhB;AACAN,IAAAA,mBAAmB,CAACe,IAAD,CAAnB;AACD,GALD;;AAOA,QAAME,IAAI,GAAG;AACTrB,IAAAA;AADS,GAAb;AAIA,sBAAO,QAAC,yBAAD,OAA+BqB;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlCD;;GAAMnB,gB;UACwCR,Q;;;KADxCQ,gB;AAoCN,eAAeA,gBAAf","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.getCompanyShares\r\n];\r\n\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    useEffect(() => {\r\n      setCompanyNameShare(companyShares);\r\n    }, [props.companyShares]);\r\n  \r\n    console.log(companyNameShare);\r\n  \r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {Y: \"\", CNAME: \"\"}]);\r\n    }\r\n    const deleteNameShare = (id) => {\r\n      console.log(id);\r\n      const list = [...companyNameShare];\r\n      list.splice(id, 1);\r\n      setCompanyNameShare(list);\r\n    }\r\n\r\n    const args = {\r\n        companyShares\r\n    }\r\n\r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}