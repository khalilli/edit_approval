{"ast":null,"code":"import _objectSpread from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/user/Downloads/socar_tree_view/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import ShareOfCompaniesComponent from\"./ShareOfCompaniesComponents\";import useStore from'../../../stores/useStore';import shallow from'zustand/shallow';import initiateWorkflow from\"../../api/initiateWorkflow\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var getState=function getState(state){return[state.companyShares,state.companySharesWarn,state.getCompanyShares];};var ShareOfCompanies=function ShareOfCompanies(){var _useStore=useStore(getState,shallow),_useStore2=_slicedToArray(_useStore,3),companyShares=_useStore2[0],companySharesWarn=_useStore2[1],getCompanyShares=_useStore2[2];useEffect(function(){getCompanyShares();},[getCompanyShares]);var _useState=useState(companyShares),_useState2=_slicedToArray(_useState,2),companyNameShare=_useState2[0],setCompanyNameShare=_useState2[1];useEffect(function(){setCompanyNameShare(companyShares);},[companyShares]);var changeNameShare=function changeNameShare(e,id){var values=_toConsumableArray(companyNameShare);values[id][e.target.name]=e.target.value;setCompanyNameShare(values);};var addShare=function addShare(){setCompanyNameShare([].concat(_toConsumableArray(companyNameShare),[{Y:\"\",CNAME:\"\"}]));};// highlight edited input fields\nvar colorKey=[];var colorValues=[];for(var j=0;j<companyShares.length;j++){if(companyShares[j].Y!==companySharesWarn[j].Y){colorKey.push(j);colorValues.push(companyShares[j].Y);}}var _useState3=useState(colorKey),_useState4=_slicedToArray(_useState3,2),colorKeys=_useState4[0],setcolorKeys=_useState4[1];var deleteNameShare=function deleteNameShare(e,id){e.preventDefault();var list=_toConsumableArray(companyNameShare);list.splice(id,1);setCompanyNameShare(list);var colorlist=_toConsumableArray(colorKeys);colorlist.splice(id,1);setcolorKeys(colorlist);};//remove keys of array to fit tags\nvar cname=[];var cshare=[];for(var i=0;i<companyNameShare.length;i++){cname.push(companyNameShare[i].CNAME);cshare.push(parseInt(companyNameShare[i].Y));}var checkChange=false;if(companySharesWarn.length!==companyNameShare.length){checkChange=true;}else{for(var n=0;n<companyNameShare.length;n++){if(companyNameShare[n].Y!==companySharesWarn[n].Y||companyNameShare[n].CNAME!==companySharesWarn[n].CNAME){checkChange=true;}}}var args={companyShares:companyShares,companyNameShare:companyNameShare,companySharesWarn:companySharesWarn,changeNameShare:changeNameShare,addShare:addShare,deleteNameShare:deleteNameShare,colorKeys:colorKeys,colorValues:colorValues,onSubmitForm:function onSubmitForm(){var params=new URLSearchParams(window.location.search);var key=parseInt(params.get(\"key\"));var args={cid:key,companyName:cname,companyShare:cshare,change:checkChange,nameLength:cname.length};initiateWorkflow(args);}};return/*#__PURE__*/_jsx(ShareOfCompaniesComponent,_objectSpread({},args));};export default ShareOfCompanies;","map":{"version":3,"sources":["/home/user/Downloads/socar_tree_view/src/feautures/shareOfCompanies/views/ShareOfCompanies.js"],"names":["ShareOfCompaniesComponent","useStore","shallow","initiateWorkflow","useEffect","useState","getState","state","companyShares","companySharesWarn","getCompanyShares","ShareOfCompanies","companyNameShare","setCompanyNameShare","changeNameShare","e","id","values","target","name","value","addShare","Y","CNAME","colorKey","colorValues","j","length","push","colorKeys","setcolorKeys","deleteNameShare","preventDefault","list","splice","colorlist","cname","cshare","i","parseInt","checkChange","n","args","onSubmitForm","params","URLSearchParams","window","location","search","key","get","cid","companyName","companyShare","change","nameLength"],"mappings":"qXAAA,MAAOA,CAAAA,yBAAP,KAAsC,8BAAtC,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAI,CACtBA,KAAK,CAACC,aADgB,CAEtBD,KAAK,CAACE,iBAFgB,CAGtBF,KAAK,CAACG,gBAHgB,CAAJ,EAAtB,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,cAA6DV,QAAQ,CAACK,QAAD,CAAWJ,OAAX,CAArE,wCAAOM,aAAP,eAAsBC,iBAAtB,eAAyCC,gBAAzC,eACAN,SAAS,CAAC,UAAI,CACVM,gBAAgB,GACnB,CAFQ,CAEN,CAACA,gBAAD,CAFM,CAAT,CAIA,cAAgDL,QAAQ,CAACG,aAAD,CAAxD,wCAAOI,gBAAP,eAAyBC,mBAAzB,eAEAT,SAAS,CAAC,UAAM,CACdS,mBAAmB,CAACL,aAAD,CAAnB,CACD,CAFQ,CAEN,CAACA,aAAD,CAFM,CAAT,CAIA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAIC,EAAJ,CAAW,CACjC,GAAMC,CAAAA,MAAM,oBAAOL,gBAAP,CAAZ,CACAK,MAAM,CAACD,EAAD,CAAN,CAAWD,CAAC,CAACG,MAAF,CAASC,IAApB,EAA4BJ,CAAC,CAACG,MAAF,CAASE,KAArC,CACAP,mBAAmB,CAACI,MAAD,CAAnB,CACD,CAJD,CAKA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBR,mBAAmB,8BAAKD,gBAAL,GAAuB,CAACU,CAAC,CAAE,EAAJ,CAAQC,KAAK,CAAE,EAAf,CAAvB,GAAnB,CACD,CAFD,CAGA;AACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAAClB,aAAa,CAACmB,MAA9B,CAAsCD,CAAC,EAAvC,CAA0C,CACxC,GAAIlB,aAAa,CAACkB,CAAD,CAAb,CAAiBJ,CAAjB,GAAuBb,iBAAiB,CAACiB,CAAD,CAAjB,CAAqBJ,CAAhD,CAAkD,CAChDE,QAAQ,CAACI,IAAT,CAAcF,CAAd,EACAD,WAAW,CAACG,IAAZ,CAAiBpB,aAAa,CAACkB,CAAD,CAAb,CAAiBJ,CAAlC,EACD,CACF,CACD,eAAkCjB,QAAQ,CAACmB,QAAD,CAA1C,yCAAOK,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAChB,CAAD,CAAIC,EAAJ,CAAW,CACjCD,CAAC,CAACiB,cAAF,GACA,GAAMC,CAAAA,IAAI,oBAAOrB,gBAAP,CAAV,CACAqB,IAAI,CAACC,MAAL,CAAYlB,EAAZ,CAAgB,CAAhB,EACAH,mBAAmB,CAACoB,IAAD,CAAnB,CACA,GAAME,CAAAA,SAAS,oBAAON,SAAP,CAAf,CACAM,SAAS,CAACD,MAAV,CAAiBlB,EAAjB,CAAqB,CAArB,EACAc,YAAY,CAACK,SAAD,CAAZ,CACD,CARD,CAUA;AACA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAAC1B,gBAAgB,CAACe,MAAjC,CAAyCW,CAAC,EAA1C,CAA6C,CACzCF,KAAK,CAACR,IAAN,CAAWhB,gBAAgB,CAAC0B,CAAD,CAAhB,CAAoBf,KAA/B,EACAc,MAAM,CAACT,IAAP,CAAYW,QAAQ,CAAC3B,gBAAgB,CAAC0B,CAAD,CAAhB,CAAoBhB,CAArB,CAApB,EACH,CAED,GAAIkB,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAG/B,iBAAiB,CAACkB,MAAlB,GAA6Bf,gBAAgB,CAACe,MAAjD,CAAwD,CACtDa,WAAW,CAAG,IAAd,CACD,CAFD,IAEK,CACH,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAAC7B,gBAAgB,CAACe,MAA/B,CAAsCc,CAAC,EAAvC,CAA0C,CACxC,GAAG7B,gBAAgB,CAAC6B,CAAD,CAAhB,CAAoBnB,CAApB,GAA0Bb,iBAAiB,CAACgC,CAAD,CAAjB,CAAqBnB,CAA/C,EAAoDV,gBAAgB,CAAC6B,CAAD,CAAhB,CAAoBlB,KAApB,GAA8Bd,iBAAiB,CAACgC,CAAD,CAAjB,CAAqBlB,KAA1G,CAAgH,CAC9GiB,WAAW,CAAG,IAAd,CACD,CACF,CACF,CACD,GAAME,CAAAA,IAAI,CAAG,CACTlC,aAAa,CAAbA,aADS,CAETI,gBAAgB,CAAhBA,gBAFS,CAGTH,iBAAiB,CAAjBA,iBAHS,CAITK,eAAe,CAAfA,eAJS,CAKTO,QAAQ,CAARA,QALS,CAMTU,eAAe,CAAfA,eANS,CAOTF,SAAS,CAATA,SAPS,CAQTJ,WAAW,CAAXA,WARS,CASTkB,YAAY,CAAE,uBAAM,CAClB,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAb,CACA,GAAIC,CAAAA,GAAG,CAAGV,QAAQ,CAACK,MAAM,CAACM,GAAP,CAAW,KAAX,CAAD,CAAlB,CACA,GAAMR,CAAAA,IAAI,CAAG,CACXS,GAAG,CAAEF,GADM,CAEXG,WAAW,CAAEhB,KAFF,CAGXiB,YAAY,CAAEhB,MAHH,CAIXiB,MAAM,CAAEd,WAJG,CAKXe,UAAU,CAAEnB,KAAK,CAACT,MALP,CAAb,CAOAxB,gBAAgB,CAACuC,IAAD,CAAhB,CACD,CApBQ,CAAb,CAuBA,mBAAO,KAAC,yBAAD,kBAA+BA,IAA/B,EAAP,CACH,CAlFD,CAoFA,cAAe/B,CAAAA,gBAAf","sourcesContent":["import ShareOfCompaniesComponent from \"./ShareOfCompaniesComponents\";\r\nimport useStore from '../../../stores/useStore';\r\nimport shallow from 'zustand/shallow';\r\nimport initiateWorkflow from \"../../api/initiateWorkflow\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getState = state => [\r\n    state.companyShares,\r\n    state.companySharesWarn,\r\n    state.getCompanyShares\r\n];\r\n\r\nconst ShareOfCompanies = () => {\r\n    const [companyShares, companySharesWarn, getCompanyShares] = useStore(getState, shallow);\r\n    useEffect(()=>{\r\n        getCompanyShares();\r\n    }, [getCompanyShares]);\r\n\r\n    const [companyNameShare, setCompanyNameShare] = useState(companyShares);\r\n\r\n    useEffect(() => {\r\n      setCompanyNameShare(companyShares);\r\n    }, [companyShares]);\r\n  \r\n    const changeNameShare = (e, id) => {\r\n      const values = [...companyNameShare];\r\n      values[id][e.target.name] = e.target.value;\r\n      setCompanyNameShare(values);\r\n    }\r\n    const addShare = () => {\r\n      setCompanyNameShare([...companyNameShare, {Y: \"\", CNAME: \"\"}]);\r\n    }\r\n    // highlight edited input fields\r\n    var colorKey = [];\r\n    var colorValues = [];\r\n    for (var j=0; j<companyShares.length; j++){\r\n      if (companyShares[j].Y !== companySharesWarn[j].Y){\r\n        colorKey.push(j);\r\n        colorValues.push(companyShares[j].Y);\r\n      }\r\n    }\r\n    const [colorKeys, setcolorKeys] = useState(colorKey);\r\n    const deleteNameShare = (e, id) => {\r\n      e.preventDefault();\r\n      const list = [...companyNameShare];\r\n      list.splice(id, 1);\r\n      setCompanyNameShare(list);\r\n      const colorlist = [...colorKeys];\r\n      colorlist.splice(id, 1);\r\n      setcolorKeys(colorlist);\r\n    }\r\n\r\n    //remove keys of array to fit tags\r\n    const cname = [];\r\n    const cshare = [];\r\n    for (var i=0; i<companyNameShare.length; i++){\r\n        cname.push(companyNameShare[i].CNAME);\r\n        cshare.push(parseInt(companyNameShare[i].Y));\r\n    }\r\n    \r\n    var checkChange = false;\r\n    if(companySharesWarn.length !== companyNameShare.length){\r\n      checkChange = true;\r\n    }else{\r\n      for(var n=0;n<companyNameShare.length;n++){\r\n        if(companyNameShare[n].Y !== companySharesWarn[n].Y || companyNameShare[n].CNAME !== companySharesWarn[n].CNAME){\r\n          checkChange = true;\r\n        }\r\n      }\r\n    }\r\n    const args = {\r\n        companyShares,\r\n        companyNameShare,\r\n        companySharesWarn,\r\n        changeNameShare,\r\n        addShare,\r\n        deleteNameShare,\r\n        colorKeys,\r\n        colorValues,\r\n        onSubmitForm: () => {\r\n          let params = new URLSearchParams(window.location.search);\r\n          let key = parseInt(params.get(\"key\"));\r\n          const args = {\r\n            cid: key,\r\n            companyName: cname,\r\n            companyShare: cshare,\r\n            change: checkChange,\r\n            nameLength: cname.length\r\n          };\r\n          initiateWorkflow(args);\r\n        }\r\n    }\r\n\r\n    return <ShareOfCompaniesComponent {...args} />\r\n}\r\n\r\nexport default ShareOfCompanies;"]},"metadata":{},"sourceType":"module"}