{"ast":null,"code":"import axios from 'axios';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\n\nconst handleSetCompany = (set, get, args) => {\n  const companyDetails = Object.assign({}, get().companyDetails);\n\n  for (const object of args) {\n    switch (object.property) {\n      case 'name':\n        companyDetails.name = object.value;\n        break;\n\n      case 'nameWarn':\n        companyDetails.nameWarn = object.value;\n        break;\n\n      case 'segment':\n        companyDetails.segment = object.value;\n        break;\n\n      case 'segmentWarn':\n        companyDetails.segmentWarn = object.value;\n        break;\n\n      case 'share':\n        companyDetails.share = object.value;\n        break;\n\n      case 'shareWarn':\n        companyDetails.shareWarn = object.value;\n        break;\n\n      case 'numberOfEmployees':\n        companyDetails.numberOfEmployees = object.value;\n        break;\n\n      case 'numberOfEmployeesWarn':\n        companyDetails.numberOfEmployeesWarn = object.value;\n        break;\n\n      case 'ceo':\n        companyDetails.ceo = object.value;\n        break;\n\n      case 'ceoWarn':\n        companyDetails.ceoWarn = object.value;\n        break;\n\n      case 'countryOfOperation':\n        companyDetails.countryOfOperation = object.value;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  set({\n    companyDetails\n  });\n};\n\nconst handleInitiateWorkflow = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n  const args = {\n    cid: key\n  };\n  await initiateWorkflow(args);\n};\n\nconst handleGetCompanyDetails = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      companyDetails: {\n        name: data[0].CNAME,\n        nameWarn: data[0].CNAME,\n        segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\n        share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\n        numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\n        ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\n        countryOfOperation: ''\n      }\n    });\n  }\n};\n\nconst handleGetDirectors = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      dirname: x.DIREKTOR\n    }));\n    set({\n      directorList: data\n    });\n  }\n};\n\nconst handleGetRepresentatives = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    data.pop();\n    data = data.map(x => ({\n      repname: x.UMUMIYIGINCAQ\n    }));\n    set({\n      representativeList: data\n    });\n  }\n};\n\nconst handleGetFinancialData = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\" + key);\n    const data = response.data;\n    data.pop();\n    set({\n      financialData: {\n        active: data[0].CEMIAKTIVLER,\n        capital: data[0].CEMIKAPITAL,\n        liability: data[0].CEMIOHDELIKLER,\n        ebitda: data[0].EBITDA,\n        loss: data[0].XALISMENFEET,\n        incometax: data[0].MENFEETVERGI,\n        propertytax: data[0].EMLAKVERGI,\n        dividend1: data[0].BUTUNTESISCILERE,\n        dividend2: data[0].SOCARA\n      }\n    });\n  }\n};\n\nconst handleGetCompanyShares = async (set, get) => {\n  let params = new URLSearchParams(window.location.search);\n  let key = parseInt(params.get(\"key\"));\n\n  if (!Number.isNaN(key)) {\n    const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\" + key);\n    let data = response.data;\n    let dataWarn = response.data;\n    dataWarn = dataWarn.map(x => ({\n      Y: x.Y,\n      CNAME: x.CNAME\n    }));\n    dataWarn.pop();\n    data.pop();\n    set({\n      companyShares: data,\n      companySharesWarn: dataWarn\n    });\n  }\n};\n\nconst store = (set, get) => ({\n  companyDetails: {\n    name: '',\n    segment: '',\n    share: 0,\n    numberOfEmployees: 0,\n    ceo: '',\n    ceoWarn: '',\n    countryOfOperation: ''\n  },\n  directorList: [{\n    dirname: 'İlham Nəsirov'\n  }, {\n    dirname: 'Bülent Karaca'\n  }],\n  representativeList: [{\n    repname: 'Rövnəq Abdullayev'\n  }, {\n    repname: 'Mustafa Kopuz'\n  }],\n  financialData: {\n    active: '',\n    capital: '',\n    liability: '',\n    ebitda: '',\n    loss: '',\n    incometax: '',\n    propertytax: '',\n    dividend1: '',\n    dividend2: ''\n  },\n  companyShares: [{\n    Y: 60,\n    CNAME: \"SOCAR\"\n  }, {\n    Y: 40,\n    CNAME: \"Tekfen\"\n  }],\n  companySharesWarn: [],\n  setCompanyDetails: args => handleSetCompany(set, get, args),\n  setInitialCompanyDetails: () => set({\n    companyDetails: {\n      name: '',\n      segment: '',\n      share: 0,\n      numberOfEmployees: 0,\n      ceo: '',\n      countryOfOperation: ''\n    }\n  }),\n  initWorkflow: () => handleInitiateWorkflow(set, get),\n  getCompanyDetails: () => handleGetCompanyDetails(set, get),\n  getDirectors: () => handleGetDirectors(set, get),\n  getRepresentatives: () => handleGetRepresentatives(set, get),\n  getFinancialData: () => handleGetFinancialData(set, get),\n  getCompanyShares: () => handleGetCompanyShares(set, get)\n});\n\nconst useStore = create(devtools(store));\nexport default useStore;","map":{"version":3,"sources":["/home/user/Downloads/edit_approval/src/stores/useStore.js"],"names":["axios","create","devtools","initiateWorkflow","handleSetCompany","set","get","args","companyDetails","Object","assign","object","property","name","value","nameWarn","segment","segmentWarn","share","shareWarn","numberOfEmployees","numberOfEmployeesWarn","ceo","ceoWarn","countryOfOperation","handleInitiateWorkflow","params","URLSearchParams","window","location","search","key","parseInt","cid","handleGetCompanyDetails","Number","isNaN","response","data","pop","CNAME","SERVICENAME","CSHARE","COUNTEMP","NNAME","handleGetDirectors","map","x","dirname","DIREKTOR","directorList","handleGetRepresentatives","repname","UMUMIYIGINCAQ","representativeList","handleGetFinancialData","financialData","active","CEMIAKTIVLER","capital","CEMIKAPITAL","liability","CEMIOHDELIKLER","ebitda","EBITDA","loss","XALISMENFEET","incometax","MENFEETVERGI","propertytax","EMLAKVERGI","dividend1","BUTUNTESISCILERE","dividend2","SOCARA","handleGetCompanyShares","dataWarn","Y","companyShares","companySharesWarn","store","setCompanyDetails","setInitialCompanyDetails","initWorkflow","getCompanyDetails","getDirectors","getRepresentatives","getFinancialData","getCompanyShares","useStore"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport create from 'zustand';\r\nimport {devtools} from 'zustand/middleware';\r\nimport initiateWorkflow from '../feautures/api/initiateWorkflow';\r\n\r\nconst handleSetCompany = (set, get, args) => {\r\n    const companyDetails = Object.assign({}, get().companyDetails);\r\n    for (const object of args) {  \r\n        switch (object.property) {\r\n            case 'name':\r\n                companyDetails.name = object.value;\r\n                break;\r\n            case 'nameWarn':\r\n                companyDetails.nameWarn = object.value;\r\n                break;\r\n            case 'segment':\r\n                companyDetails.segment = object.value; \r\n                break;\r\n            case 'segmentWarn':\r\n                companyDetails.segmentWarn = object.value; \r\n                break;\r\n            case 'share':\r\n                companyDetails.share = object.value;\r\n                break;\r\n            case 'shareWarn':\r\n                companyDetails.shareWarn = object.value;\r\n                break;\r\n            case 'numberOfEmployees':\r\n                companyDetails.numberOfEmployees = object.value;\r\n                break;\r\n            case 'numberOfEmployeesWarn':\r\n                companyDetails.numberOfEmployeesWarn = object.value;\r\n                break;\r\n            case 'ceo':\r\n                companyDetails.ceo = object.value;\r\n                break;\r\n            case 'ceoWarn':\r\n                companyDetails.ceoWarn = object.value;\r\n                break;\r\n            case 'countryOfOperation':\r\n                companyDetails.countryOfOperation = object.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    set({companyDetails});\r\n}\r\nconst handleInitiateWorkflow = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    const args = {\r\n        cid: key\r\n    };\r\n    await initiateWorkflow(args);\r\n}\r\nconst handleGetCompanyDetails = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=116190&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            companyDetails: {\r\n                name: data[0].CNAME,\r\n                nameWarn: data[0].CNAME,\r\n                segment: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                segmentWarn: data[0].SERVICENAME !== '?' ? data[0].SERVICENAME : '',\r\n                share: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                shareWarn: data[0].CSHARE !== '?' ? data[0].CSHARE : '',\r\n                numberOfEmployees: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                numberOfEmployeesWarn: data[0].COUNTEMP !== '?' ? data[0].COUNTEMP : '',\r\n                ceo: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                ceoWarn: data[0].NNAME !== '?' ? data[0].NNAME : '',\r\n                countryOfOperation: ''\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetDirectors = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128822&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({dirname: x.DIREKTOR}));\r\n        set({\r\n            directorList: data,\r\n        })\r\n    }\r\n}\r\nconst handleGetRepresentatives = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=127757&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        data.pop();\r\n        data = data.map(x=>({repname: x.UMUMIYIGINCAQ}));\r\n        set({\r\n            representativeList: data,\r\n        })\r\n    }\r\n}\r\nconst handleGetFinancialData = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\"));\r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=126689&objAction=RunReport&key=\"+key);\r\n        const data = response.data;\r\n        data.pop();\r\n        set({\r\n            financialData: {\r\n                active: data[0].CEMIAKTIVLER,\r\n                capital: data[0].CEMIKAPITAL,\r\n                liability: data[0].CEMIOHDELIKLER,\r\n                ebitda: data[0].EBITDA,\r\n                loss: data[0].XALISMENFEET,\r\n                incometax: data[0].MENFEETVERGI,\r\n                propertytax: data[0].EMLAKVERGI,\r\n                dividend1: data[0].BUTUNTESISCILERE,\r\n                dividend2: data[0].SOCARA,\r\n            }\r\n        })\r\n    }\r\n}\r\nconst handleGetCompanyShares = async (set, get) => {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let key = parseInt(params.get(\"key\")); \r\n    if(!Number.isNaN(key)){\r\n        const response = await axios.get(\"http://192.168.14.33/otcs/llisapi.dll?func=ll&objId=128820&objAction=RunReport&key=\"+key);\r\n        let data = response.data;\r\n        let dataWarn = response.data;\r\n        dataWarn = dataWarn.map(x=> ({Y: x.Y, CNAME: x.CNAME}));\r\n        dataWarn.pop();\r\n        data.pop();\r\n        set({\r\n            companyShares: data,\r\n            companySharesWarn: dataWarn,\r\n        })\r\n    }\r\n}\r\n\r\nconst store = (set, get) => ({\r\n    companyDetails: {\r\n        name: '',\r\n        segment: '',\r\n        share: 0,\r\n        numberOfEmployees: 0,\r\n        ceo: '',\r\n        ceoWarn: '',\r\n        countryOfOperation: ''\r\n    },\r\n    directorList: [{dirname: 'İlham Nəsirov'}, {dirname: 'Bülent Karaca'}],\r\n    representativeList: [{repname: 'Rövnəq Abdullayev'}, {repname: 'Mustafa Kopuz'}],\r\n    financialData: {\r\n        active: '',\r\n        capital: '',\r\n        liability: '',\r\n        ebitda: '',\r\n        loss: '',\r\n        incometax: '',\r\n        propertytax: '',\r\n        dividend1: '',\r\n        dividend2: '',\r\n    },\r\n    companyShares: [{Y: 60, CNAME: \"SOCAR\"}, {Y: 40, CNAME: \"Tekfen\"}],\r\n    companySharesWarn: [],\r\n    setCompanyDetails:  args => handleSetCompany(set, get, args),\r\n    setInitialCompanyDetails: () => set({companyDetails: {\r\n        name: '',\r\n        segment: '',\r\n        share: 0,\r\n        numberOfEmployees: 0,\r\n        ceo: '',\r\n        countryOfOperation: ''\r\n    }}),\r\n    initWorkflow: () => handleInitiateWorkflow(set, get),\r\n    getCompanyDetails: () => handleGetCompanyDetails(set, get),\r\n    getDirectors: () => handleGetDirectors(set, get),\r\n    getRepresentatives: () => handleGetRepresentatives(set, get),\r\n    getFinancialData: () => handleGetFinancialData(set, get),\r\n    getCompanyShares: () => handleGetCompanyShares(set, get)\r\n})\r\n\r\n\r\nconst useStore = create(devtools(store));\r\n\r\nexport default useStore;"]},"metadata":{},"sourceType":"module"}